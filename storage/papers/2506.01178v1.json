{
  "id": "http://arxiv.org/abs/2506.01178v1",
  "title": "Near-feasible Fair Allocations in Two-sided Markets",
  "summary": "We study resource allocation in two-sided markets from a fundamental\nperspective and introduce a general modeling and algorithmic framework to\neffectively incorporate the complex and multidimensional aspects of fairness.\nOur main technical contribution is to show the existence of a range of\nnear-feasible resource allocations parameterized in different model primitives\nto give flexibility when balancing the different policymaking requirements,\nallowing policy designers to fix these values according to the specific\napplication. To construct our near-feasible allocations, we start from a\nfractional resource allocation and perform an iterative rounding procedure to\nget an integer allocation. We show a simple yet flexible and strong sufficient\ncondition for the target feasibility deviations to guarantee that the rounding\nprocedure succeeds, exhibiting the underlying trade-offs between market\ncapacities, agents' demand, and fairness. To showcase our framework's modeling\nand algorithmic capabilities, we consider three prominent market design\nproblems: school allocation, stable matching with couples, and political\napportionment. In each of them, we obtain strengthened guarantees on the\nexistence of near-feasible allocations capturing the corresponding fairness\nnotions, such as proportionality, envy-freeness, and stability.",
  "authors": [
    "Javier Cembrano",
    "Andrés Moraga",
    "Victor Verdugo"
  ],
  "published": "2025-06-01T21:26:10Z",
  "updated": "2025-06-01T21:26:10Z",
  "categories": [
    "cs.GT",
    "econ.TH",
    "math.OC"
  ],
  "pdf_url": "http://arxiv.org/pdf/2506.01178v1",
  "full_text": "--- Page 1 ---\narXiv:2506.01178v1  [cs.GT]  1 Jun 2025Near-feasible Fair Allocations in Two-sided Markets∗\nJavier Cembrano†Andr´ es Moraga‡Victor Verdugo§¶\nAbstract\nWe study resource allocation in two-sided markets from a fundamental perspective and intro-\nduce a general modeling and algorithmic framework to effectively incorporate the complex and\nmultidimensional aspects of fairness. Our main technical contribution is to show the existence of\na range of near-feasible resource allocations parameterized in different model primitives to give\nflexibility when balancing the different policymaking requirements, allowing policy designers to\nfix these values according to the specific application. To construct our near-feasible allocations,\nwe start from a fractional resource allocation and perform an iterative rounding procedure to\nget an integer allocation. We show a simple yet flexible and strong sufficient condition for the\ntarget feasibility deviations to guarantee that the rounding procedure succeeds, exhibiting the\nunderlying trade-offs between market capacities, agents’ demand, and fairness. To showcase\nour framework’s modeling and algorithmic capabilities, we consider three prominent market\ndesign problems: school allocation, stable matching with couples, and political apportionment.\nIn each of them, we obtain strengthened guarantees on the existence of near-feasible alloca-\ntions capturing the corresponding fairness notions, such as proportionality, envy-freeness, and\nstability.\n1 Introduction\nResource allocation is a fundamental task that lies at the intersection of economics, computer\nscience, and operations, where the objective is to develop efficient policies to distribute scarce\nresources among various agents or entities. This naturally results in a two-sided market: One side\nconsists of the agents, while the other side encompasses the different resources that need to be\nallocated, all while adhering to market capacities and demands.\nMany real-world applications involve indivisible resources, a large number of entities, and com-\nbinatorial constraints, making the design of efficient resource allocations increasingly complex from\nboth a modeling and computational perspective. This two-sided paradigm applies to various situ-\nations, including the allocation of students to schools, the composition of political representative\nbodies, the allocation of doctors to hospitals, organ donation systems, job markets, and online mar-\nketplaces, among many others; see, e.g., Balinski and Young [2010], Haeringer [2018], Immorlica,\nEchenique, and Vazirani [2023], Roth [2018].\nWhile efficiency is a key goal in market design, ensuring fairness in resource allocation is ar-\nguably one of the most critical factors in assessing the quality of a policy. It is essential to evaluate\nhow effectively the policy treats different groups within a population, ensuring that resources, op-\nportunities, and outcomes are distributed equitably. Historical inequalities and biases have often led\n∗This work was partially funded by the ANID (Chile) through Grant FONDECYT 1241846.\n†Department of Algorithms and Complexity, Max Planck Institute for Informatics.\n‡School of Engineering, Pontificia Universidad Cat´ olica de Chile.\n§Institute for Mathematical and Computational Engineering, Pontificia Universidad Cat´ olica de Chile.\n¶Department of Industrial and Systems Engineering, Pontificia Universidad Cat´ olica de Chile.\n1\n--- Page 2 ---\nto disparities among various social, economic, or demographic dimensions, prompting policymak-\ners to enhance policies with proven fairness and efficiency guarantees to rectify these imbalances.\nTypically, these efforts rely on market-specific characteristics to design effective policies, taking ad-\nvantage of the rich structure of the problem space. However, many existing models and algorithms\nlack the robustness to address new fairness considerations.\nComputational challenges stem from multiple sources. On one hand, complex combinatorial\nconstraints result in NP-hard problems, requiring a trade-off between efficiency and computational\neffort. Additionally, incorporating fairness requirements across the different dimensions not only\nadds an extra layer of computational difficulty but also often leads to infeasible scenarios due to\ndeep existing impossibilities in reconciling efficiency with fairness. To navigate these challenges,\nimplementing near-feasible solutions, i.e., solutions that may slightly violate some constraints of\nthe problem, is an effective way to overcome these policymaking difficulties. From an optimization\nstandpoint, the goal is to provide provable guarantees regarding how close these solutions are to\nthe set of feasible policies.\n1.1 Our Contribution and Techniques\nIn this work, we study resource allocation in two-sided markets from a fundamental perspective\nand introduce a general modeling and algorithmic framework to effectively incorporate the complex\nand multidimensional aspects of fairness. Within this framework, we provide a rounding theorem\nto compute near-feasible allocations with strong and flexible approximation guarantees. In the\nfollowing, we summarize our contributions and discuss the implications of our results.\nA Multidimensional Resource Allocation Framework. Our first contribution is the intro-\nduction of a general framework to model resource allocation problems in two-sided markets. In\nthis model, there is a set of agents and indivisible resources with finite capacities to be allocated\nacross the agents. Multiple dimensions characterize the set of agents; each agent may belong to a\ngroup within each dimension. This model feature allows for a multidimensional representation of\nthe agents, e.g., age, gender, ethnicity, and socio-economic or demographic aspects.\nThe market is provided with target utilities, depending on the dimensions and the groups, that\ncapture the different fairness requirements. Then, the feasible points of an integer program define\nthe set of feasible resource allocations, though this set may be empty in some cases. In our near-\nfeasible resource allocations, the utilities for each group are approximated within a given factor\nwhile requiring an extra amount of resources; however, this additional amount is regulated in two\nways: by bounding the maximum extra capacity per resource and controlling the total additional\nmarket capacity. In Section 2, we provide the formal definition of our multidimensional model, its\ninstances, and our notion of near-feasible resource allocations.\nA Rounding Theorem with Flexible Guarantees. In our multidimensional resource allo-\ncation model, the set of feasible resource allocations is represented by the feasible points of an\ninteger program. From a fundamental point of view, the instances of our multidimensional re-\nsource allocation problem can be lifted to get a corresponding hypergraph encoding the agents,\nresource bundles, dimensions, and groups. Naturally, strict requirements on the allocation quality\nmight yield infeasible regions for the corresponding integer program. Our main technical contribu-\ntion establishes the existence of near-feasible resource allocations, with adjustable approximation\nguarantees. By tuning model parameters, policymakers can balance and enforce deviation bounds\ntailored to specific applications.\n2\n--- Page 3 ---\nTo construct our near-feasible allocations, we start from a fractional solution of the natural\nlinear relaxation and apply an iterative rounding procedure to derive a feasible solution for the\ninteger program. We show a simple yet flexible and strong sufficient condition for the target\nfeasibility deviations to guarantee that the iterative rounding procedure computes a near-feasible\nresource allocation (Theorem 1). This condition highlights the underlying trade-offs among market\ncapacities, agents’ demand, and utility distribution across dimensions. In Section 3, we present the\nformal statement of our main theorem, as well as the rounding algorithm and its analysis.\nComputing Near-feasible Fair Allocations. To showcase our framework’s modeling and al-\ngorithmic capabilities, we consider three prominent market design problems: school allocation,\nstable matching with couples, and political apportionment. In each of them, ruled by the suffi-\ncient condition of our main rounding theorem, we obtain a range of strengthened guarantees on\nthe existence of near-feasible allocations under general fairness requirements notions, including the\nproportionality and envy-freeness objectives.\nSchool allocation. In Section 4.1, we propose a general multidimensional allocation model which,\nin particular, captures the school allocation setting introduced by Procaccia, Robinson, and Tucker-\nFoltz [2024] as single-dimensional instances. We model group fairness by a convex optimization-\ndriven approach, and using our rounding Theorem 1 starting from a feasible fractional solution,\nwe get a general guarantee on the existence of near-feasible multidimensional resource allocations\n(Theorem 2). For the case of proportional fairness, as a corollary, we can directly accommodate the\npolicy-maker priorities by trading off the utility approximation and maximum resource capacity\naugmentation to get slight constant deviations, which differentiates our result from previous single-\ndimensional work on group utilities and total allocation excess [A., Munagala, Nasre, Sankar, et al.,\n2024, Procaccia et al., 2024].\nThen, we introduce a new multidimensional notion of group envy-freeness where the ratio\nbetween the total utility of a group for its allocation and its total utility for any other group’s\nallocation should not be smaller than the ratio between the sizes of these groups. For this natural\nnotion, we provide near-feasible resource allocations with approximation guarantees that do not\ndepend on the number of agents, thus breaking the impossibility found by Procaccia et al. [2024]\nfor their more stringent single-dimensional envy-freeness notion (Theorem 3).\nStable matching with couples. While stable matchings are guaranteed to exist in the basic\nsingle-demand setting [Gale and Shapley, 1962], this is not the case for pairs and, more generally,\nmulti-demand settings. To illustrate how our framework can also accommodate stability require-\nments, we show in Section 4.2 how by using our rounding Theorem 1, we can directly recover a\nrecent guarantee by Nguyen and Vohra [2018] for the existence of near-feasible stable allocations.\nWe further extend this setting to handle group fairness requirements and allocation stability to\nguarantee the existence of near-feasible, stable, and fair allocations (Theorem 4).\nOur result allows us to incorporate both stability and fairness while keeping the deviations from\nresource capacities bounded by small constants. For example, in the single-dimensional case, one\ncan guarantee deviations from group fairness of at most five by increasing the resource capacities\nby at most four, while keeping the deviation from the total aggregate capacity at two. Our new\nnear-feasibility results in Section 4.2 concern the interaction between stability and fairness, thereby\ncontributing to the efforts on designing two-sided markets in a multidimensional environment under\nmore involved stability concepts. We believe our algorithmic framework will help provide near-\nfeasible allocations in further stable matching settings under complex fairness requirements.\n3\n--- Page 4 ---\nPolitical apportionment. In the multidimensional apportionment problem, introduced by Balin-\nski and Demange [1989a,b] for the case of two dimensions and extended by Cembrano, Correa, and\nVerdugo [2022] to an arbitrary number of dimensions, the goal is to allocate the seats of a rep-\nresentative body proportionally across several dimensions. Classic apportionment methods, e.g.,\ndivisor methods or Hamilton’s method, aim to assign seats across districts proportionally to their\npopulation or across parties proportionally to their electoral support [Balinski and Young, 2010,\nPukelsheim, 2017].\nHowever, in addition to political parties and geographical divisions, natural dimensions include\ndemographics of the elected members such as gender or ethnicity; see, e.g., Arnosti, Bonet, and\nSethuraman [2024], Cembrano, Correa, D´ ıaz, and Verdugo [2024], Mathieu and Verdugo [2024]. In\nSection 4.3, using our rounding theorem, we improve over the result by Cembrano et al. [2022] to get\nenhanced near-feasibility guarantees for multidimensional apportionment (Theorem 5). Remark-\nably, we can further bound the total deviation from the house size, while the rounding algorithm\nby Cembrano et al. only controls the deviations on each dimension.\n1.2 Further Related Work\nFrom an algorithmic perspective, our approach to finding near-feasible allocations closely relates to\nthe classic discrepancy minimization problem. In its basic form, there is a fractional vector xwith\nentries in [0 ,1] such that Ax=bfor some binary matrix Aand an integer vector b; the goal is to\nfind a binary rounding yminimizing the maximum additive deviation ∥Ax−Ay∥∞.\nSince the seminal iterative-rounding work by Beck and Fiala [1981], the problem has been\nextensively studied, including different norms to measure deviations, probabilistic guarantees, gen-\neral combinatorial constraints, and online variants [Bansal, 2010, Bansal and Garg, 2017, Bansal,\nDadush, and Garg, 2019, Bansal, Jiang, Singla, and Sinha, 2020, Bukh, 2016, Lovett and Meka,\n2015, Rothvoss, 2017]. Iterative rounding has been a successful tool for designing discrepancy and\nnear-feasibility algorithms, and we refer to the book by Lau, Ravi, and Singh [2011] for a primer\non classic applications.\nVery recently, there has been a series of works on near-feasible stable allocations; related to\nour work is the one by Nguyen, Nguyen, and Teytelboym [2021] on group-stability and Nguyen\nand Vohra [2019] on proportionality, where they provide the existence of near-feasible allocations\nvia rounding methods; in Section 5, we briefly discuss the differences between our general fairness\napproach and the aforementioned works. In a related line, there are recent works about optimal\ncapacity design for school matching [Bobbio, Carvalho, Lodi, Rios, and Torrico, 2023], refuge\nsettlement [Ahani, Andersson, Martinello, Teytelboym, and Trapp, 2021, Andersson and Ehlers,\n2020, Delacr´ etaz, Kominers, and Teytelboym, 2016], and healthcare rationing [Aziz and Brandl,\n2021, Pathak, S¨ onmez, ¨Unver, and Yenmez, 2021]. In general, the study of fairness in allocation\nproblems has a rich history, and the concepts of proportionality and envy-freeness have been key\ndesign objectives; we refer to Moulin [2004] for an extensive treatment of the fair division theory.\n2 Multidimensional Capacitated Resource Allocation\nWe let R+(resp. R++) denote the non-negative (resp. strictly positive) reals, Ndenote the strictly\npositive integers, and N0=N∪{0}. We write [ n] as a shortcut for {1,2, . . . , n }and [n]0as a shortcut\nfor{0,1, . . . , n }. In the multidimensional capacitated resource allocation problem, or MCRA for\nshort, an instance is structured in the following way:\n4\n--- Page 5 ---\n(I)Agents, resources, and groups. We have a set Aofentities oragents , a set Rofresources ,\nand a set A′⊆Aofbinding agents, i.e., agents that must be allocated a resource. The agents\nare organized in groups according to ddimensions , namely, for each dimension ℓ∈[d] we have\nkℓdifferent groups Gℓ,1, . . . , G ℓ,kℓ⊆Aof agents such that for every i, j∈[kℓ] with i̸=j, we\nhave Gℓ,i∩Gℓ,j=∅, i.e., an agent can be part of at most one group on each dimension.\n(II)Demands and capacities. Each agent a∈Ahas a demand ωa∈Nfor the number of resources\nthat should receive, and an ωa-bundle is any function q:R→N0such thatP\nr∈Rq(r) =ωa,\nwhere q(r) represents the number of units of resource rthat are allocated to agent a. We\ndenote by Tathe set of ωa-bundles, and we write ω∗for the maximum demand of an agent, i.e.,\nmax a∈Aωa. We finally have a resource capacity function c:R→N, specifying the number of\navailable units of a resource.\nAn instance of MCRA is determined by a tuple I= (A, A′, R, G, ω, c ) ruled by (I)-(II). Given an\ninstance of MCRA, we let E={(a, q) :a∈A, q∈ Ta}denote the feasible agent-bundle pairs. A\nresource allocation is a mapping x:E → { 0,1}that satisfies the following conditions:\nP\nq∈Tax(a, q) = 1 for every a∈A′, (1)\nP\nq∈Tax(a, q)≤1 for every a∈A\\A′, (2)\nP\na∈AP\nq∈Taq(r)·x(a, q)≤c(r) for every r∈R. (3)\nIntuitively, we have x(a, q) = 1 if bundle qis assigned to agent a, and x(a, q) = 0 otherwise. The\nset of constraints (1) ensures that each agent in A′is allocated exactly one bundle, whereas (2)\nensures that every other agent is allocated at most one bundle. The set of constraints (3) ensures\nthat at most c(r) units of resource rare allocated.\nWe often consider a relaxed notion of resource allocations as a starting point for our algorithms,\nwhere we allow bundles to be fractionally allocated. We say that xis afractional resource allocation\nwhen it satisfies (1)-(3) and x(a, q)∈[0,1] for each ( a, q)∈ E, i.e., integrality is relaxed. For a\nfractional resource allocation x, we let A(x) ={a∈A:|{q∈ Ta:x(a, q)>0}| ≥ 2}denote the\nagents with more than one bundle (fractionally) allocated.\n2.1 Utilities and Near-feasible Allocations\nThroughout this work, we consider agent-dependent utility functions suitable for our applications.\nFor a collection of utility functions ua:Ta→R+for each a∈A, and a (integral or fractional)\nmapping x:E → [0,1], we let Uℓ,i(x) =P\na∈Gℓ,iP\nq∈Taua(q)·x(a, q) denote the total utility of\ngroup Gℓ,i, for each ℓ∈[d] and i∈[kℓ]. We further let U∗\nℓ,i= max {ua(q) :a∈Gℓ,iandq∈ Ta}\ndenote the maximum utility of an agent in Gℓ,i. For notation simplicity, we denote the collection\nof utility functions ( ua)a∈Abyu.\nNear-feasible allocations. Letα∈Nd\n0andδ,∆∈N0. Given an instance I= (A, A′, R, G, ω, c )\nof MCRA, a fractional resource allocation x, and a collection of utility functions u, a mapping\ny:E → { 0,1}is an ( α, δ,∆)-approximation of xwith respect to uif it satisfies (1)-(2) and\n|Uℓ,i(y)−Uℓ,i(x)|< α ℓ·U∗\nℓ,ifor every ℓ∈[d], i∈[kℓ], (4)\n|P\na∈AP\nq∈Taq(r)·(y(a, q)−x(a, q))|< δ for every r∈R, (5)\n|P\na∈AP\nq∈Taωa·(y(a, q)−x(a, q))|< ω∗·∆. (6)\n5\n--- Page 6 ---\nIn such near-feasible allocation, the utility of each group Gℓ,ideviates strictly less than αℓ·U∗\nℓ,i\nfrom the utilities in x, the deviation on the assigned agents to each resource are strictly less than\nδ, and the deviation on the total number of allocated resources is strictly less than ω∗·∆. As we\nwill illustrate in Section 4, in some applications the specific structure of the problem guarantees\nthat some of the left-hand sides of these inequalities are integer values, so the maximum possible\ndeviations become αℓ·U∗\nℓ,i−1,δ−1, or ω∗·∆−1, respectively. Finally, we say that a mapping\ny:E → { 0,1}is arounding of a fractional resource allocation xify(a, q) = 0 whenever x(a, q) = 0\nandy(a, q) = 1 whenever x(a, q) = 1.\n3 A Rounding Theorem\nIn this section, we present our main technical result. On an intuitive level, the idea is to start\nfrom a fractional resource allocation satisfying a certain fairness notion, which is known to be kept\nupon rounding. Our result then states the existence of a resource allocation obtained by rounding\nthis fractional allocation that guarantees small deviations from the resource capacities and from\narbitrarily defined utilities. While having small deviations from capacities constitutes a natural\ngoal in this setting, the definition of the group utilities will allow our model to capture fairness\nin different applications. Remarkably, our result gives a high degree of flexibility for choosing\nthe maximum deviations, allowing policy designers to fix these values according to the specific\napplication.\nTheorem 1. LetI= (A, A′, R, G, ω, c )be an instance of MCRA, let xbe a fractional resource\nallocation for this instance, and let ua:Ta→R+be a utility function for each agent a∈A. Fix\nψ= 1ifA(x)̸=∅ord≤1, and ψ∈ {0,1}arbitrarily otherwise. Let α∈Nd\n0andδ∈N0be such\nthat1ψ=1\n2+X\nℓ∈[d]1\nαℓ+ 1+ω∗\nδ+ 1≤1 (7)\nand let ∆∈N0be such that one of the following holds:\n(i) ∆ ≥2andψ= 1; or\n(ii)inequality (7) holds strictly and ∆≥1/\u0000\n1−\u00001ψ=1\n2+P\nℓ∈[d]1\nαℓ+1+ω∗\nδ+1\u0001\u0001\n−1.\nThen, there exists a rounding yofxthat is an (α, δ,∆)-approximation of xwith respect to u.\nFurthermore, ycan be found in time polynomial in |A|,k1, . . . , k d, and|R|ω∗.\nThe parameter ψin the theorem captures whether we impose or not, in a certain setting,\nconstraints over the fractional allocation associated with a single agent. If some agent has two or\nmore associated fractional variables under allocation x, i.e.,A(x)̸=∅, this has to be the case to\nensure that a fractional allocation is produced; otherwise, we have the freedom to impose these\nconstraints and bound the total deviation ∆ or not impose them and get smaller violations for\ngroups and individual resources.\nTo prove this theorem, we construct an iterative rounding algorithm that starts from a fractional\nresource allocation and iteratively rounds its components while ensuring that no constraint is\nviolated by too much. We first introduce some notation we use for its description and analysis. For\nan instance I= (A, A′, R, G, ω, c ), a subset F ⊆ E , and a mapping x:F → (0,1), we write\nF(a) ={(a′, q)∈ F:a′=a} for every a∈A,\nF(ℓ, i) ={(a, q)∈ F:a∈Gℓ,i} for every ℓ∈[d], i∈[kℓ],\nF(r) ={(a, q)∈ F:q(r)≥1} for every r∈R.\n6\n--- Page 7 ---\nThese concepts allow for a natural hypergraph interpretation, where the vertices are all agents,\nresources, and groups, and each tuple ( a, q)∈ F is associated with a hyperedge comprising agent\na, all groups to which abelongs, and all resources in q. With this point of view, the sets F(a),\nF(ℓ, i), and F(r) correspond to the incident hyperedges of a given vertex. Although this is not\na proper hypergraph as a bundle may contain several copies of a resource, we sometimes use this\ninterpretation for informal explanations and discussions. We often refer to a pair ( a, q)∈ Fsimply\nase, in particular, whenever specification about aorqis not needed. In slight abuse of notation,\nwe write u(e) instead of ua(q) when e= (a, q). We also write A(F) ={a∈A:F(a)≥1},\nR(F) ={r∈R:F(r)≥1}, and Gℓ(F) ={i∈[kℓ] :F(ℓ, i)≥1}for each ℓ∈[d], to refer to the\nagents, resources, and groups in the ℓth dimension with incident hyperedges.\nWe now introduce the linear program solved by our algorithm in each iteration. We let I=\n(A, A′, R, G, ω, c ) be an instance, ube a collection of utility functions, ˜ x:F → (0,1) be a mapping\nonF ⊆ E ,˜A⊆Abe a subset of binding agents, ˜G⊆ {(ℓ, i) :ℓ∈[d], i∈[kℓ]}be a subset of binding\ngroups, ˜R⊆Rbe a subset of binding resources, and χ∈ {0,1}be a binary value. We consider the\nfollowing linear program LP( I, u,˜x,˜A,˜G,˜R, χ) with variables y:F → [0,1]:\nP\ne∈F(a)y(e) = 1 for every a∈˜A, (8)\nP\ne∈F(a)y(e)≤1 for every a∈A(F)\\˜A, (9)\nP\ne∈F(ℓ,i)u(e)·y(e) =P\ne∈F(ℓ,i)u(e)·˜x(e) for every ℓ∈[d], i∈˜Gℓ, (10)\nP\n(a,q)∈F(r)q(r)·y(a, q) =P\n(a,q)∈F(r)q(r)·˜x(a, q) for every r∈˜R, (11)\nP\n(a,q)∈Fωa·y(a, q) =P\n(a,q)∈Fωa·˜x(a, q) if χ= 1, (12)\n0≤y(e)≤1 for every e∈ F. (13)\nIn each iteration of our algorithm, Fwill represent the remaining tuples ( a, q) with an associated\nfractional value ˜ x(a, q) in the allocation. Solving this linear program will then ensure to maintain a\ntotal allocation of 1 for all agents in ˜Aand at most one for the other agents, the same total utility\nas in ˜ xfor every group Gℓ,iwith i∈˜Gℓ, the same number of allocated agents for every resource\nin˜R, and the same total number of allocated agents when χ= 1. The definitions of these sets of\nagents, groups, and resources in each iteration will be made to balance two simultaneous objectives:\n(i) that agents, groups, and resources with many associated fractional values do not deviate from\ntheir current allocation, and (ii) that there are more variables than linearly independent equality\nconstraints so that the algorithm makes progress and eventually terminates. Similarly, the binary\nvalue χwill be set to zero only when there are few fractional values, to ensure that the total\ndeviation from the number of resources allocated initially is kept under control.\nOur rounding algorithm, formally described in Algorithm 1, starts from a given fractional\nallocation x(which we also call x0) and iteratively solves LP( I, u,˜x,˜A,˜G,˜R, χ) for ˜ xbeing the\nfractional entries of x, each time only considering the necessary constraints to prevent deviations\nbeyond the allowed ones. At step t, the algorithm starts from an allocation xtand constructs an\nallocation xt+1by leaving the integral entries of xtunchanged and taking, for the fractional entries\n˜xt, an extreme point of this linear program.\nThis program considers, for instance, constraint (10) for each group Gℓ,isuch that there are\nαℓ+ 1 or more fractional values ˜ xt(a, q) for some a∈Gℓ,iandq∈ Ta; as the other groups Gℓ,ihave\nat most αℓsuch fractional values, they will deviate less than αℓ·U∗\nℓ,ifrom their previous utility.\nSimilarly, the program considers constraint (8) for all agents with two or more values of ˜ xt(a, q)\nsumming up to 1, it considers constraint (11) for all resources r∈Rwith δ+ 1 or more units\nassociated with fractional values of ˜ xt, and it considers constraint (12) only if there are ∆ + 1 or\n7\n--- Page 8 ---\nALGORITHM 1: Iterative rounding for MCRA\nInput: instance I= (A, A′, R, G, ω, c ), utility functions u, fractional resource allocation x, maximum\ndeviations α∈Nd\n0andδ,∆∈N0\nOutput: resource allocation y\nx0←x;\nt←0;\nwhile true do\nFt← {(a, q)∈ E: 0< xt(a, q)<1};\n˜xt(e)←xt(e) for every e∈ Ft;\n˜At←\b\na∈ A(xt) :P\ne∈Ft(a)xt(e) = 1\t\n;\n˜Gt\nℓ←\b\n(ℓ, i) :i∈[kℓ] s.t.|Ft(ℓ, i)| ≥αℓ+ 1\t\nfor every ℓ∈[d];\n˜Rt←\b\nr∈R:P\n(a,q)∈Ft(r)q(r)≥δ+ 1\t\n;\nχt←1if|A(Ft)\\˜At| ≥∆ + 1, elseχt←0;\nif˜At=˜Rt=∅,˜Gt\nℓ=∅for every ℓ∈[d], and χt= 0then\nbreak\nend\nxt+1(e)←xt(e) for every e∈ E \\ Ft;\ny∗←extreme point of LP( I, u,˜xt,˜At,˜Gt,˜Rt, χt);\nxt+1(e)←y∗(e) for every e∈ Ft;\nt←t+ 1\nend\nT←t;\nxT+1(e)←xT(e) for every e∈ E \\ FT;\nfixxT+1(e)∈ {⌊xT(e)⌋,⌈xT(e)⌉}for every e∈ FTsuch thatP\ne∈FT(a)xT+1(e)≤1 for each a∈A(FT);\nreturn xT+1\nmore tuples ( a, q) with agent anot being considered for constraint (8). We will prove that this\nconstruction ensures having more variables than linearly independent equality constraints in each\niteration. Thus, during the algorithm execution, we either fix a new variable to an integer value or\nan inequality constraint becomes tight.\nWhen analyzing the algorithm, we usually fix its input and directly refer to the objects con-\nstructed during its execution with the names defined therein. For an iteration t∈[T−1]0, we\nfurther let\nCt=|˜At|+P\nℓ∈[d]|˜Gt\nℓ|+|˜Rt|+χt\ndenote the number of equality constraints of LP( I, u,˜xt,˜At,˜Gt,˜Rt, χt). The following lemma states\nthe property that ensures that the algorithm terminates: The linear program solved in each iteration\nhas more variables than linearly independent equality constraints.\nLemma 1. LetI= (A, A′, R, G, ω, c )be an instance, xa fractional resource allocation for it, ua\ncollection of utility functions, and α, δ,∆, ψsuch that the conditions in the statement of Theorem 1\nare satisfied. Then, for every iteration t∈[T−1]0it holds that Ct≤ |Ft|. Furthermore, if the\ninequality is tight, then the following properties hold:\n(i)Ifψ= 1, then ˜At=A(Ft);\n(ii)˜Gt\nℓ=Gℓ(Ft)andS\ni∈Gℓ(Ft)Gℓ,i=A(Ft)for every ℓ∈[d];\n(iii) ˜Rt=R(Ft)andP\nr∈R(Ft)q(r) =ω∗for every (a, q)∈ Ft.\n8\n--- Page 9 ---\nBefore proving this result, we state a simple lemma that covers the case where ∆ satisfies the\nsecond property in the statement of Theorem 1.\nLemma 2. Letd∈NandΘ, γ∈Rd\n++be such thatP\nℓ∈[d]Θℓ\nγℓ<1. Then, for every θ, ε∈Rd\n+with\nθℓ≤Θℓfor every ℓ∈[d]and every z∈Nwe have that\nX\nℓ∈[d]\u0016θℓz−εℓ\nγℓ\u0017\n≤z−1.\nFurthermore, if the inequality is tight, we have either\n(i)εℓ= 0andθℓ= Θ ℓfor every ℓ∈[d]; or\n(ii)z <1/(1−P\nℓ∈[d]Θℓ\nγℓ).\nProof. Letd,Θ, γbe as in the statement, and let first θ, ε∈Rd\n+andz∈Nbe arbitrary numbers\nsuch that θℓ≤Θℓfor every ℓ∈[d]. Then,\nX\nℓ∈[d]\u0016θℓz−εℓ\nγℓ\u0017\n≤X\nℓ∈[d]Θℓz\nγℓ< z.\nSince the expression on the left-hand side is an integer, the upper bound of z−1 follows.\nLet now θ, ε∈Rd\n+andz∈Nbe such that θℓ≤Θℓand\nX\nℓ∈[d]\u0016θℓz−εℓ\nγℓ\u0017\n=z−1.\nSuppose that there exists ℓ′∈[d] such that either εℓ′>0 orθℓ′<Θℓ′. We define rℓ=Θℓz\nγℓ−\u0004θℓz−εℓ\nγℓ\u0005\nfor each ℓ∈[d]. Clearly, rℓ≥0 for all ℓ∈[d] and rℓ′>0. Taking the sum of rℓover all ℓ∈[d], we\nthen get\n0<X\nℓ∈[d]rℓ=X\nℓ∈[d]Θℓz\nγℓ−X\nℓ∈[d]\u0016θℓz−εℓ\nγℓ\u0017\n=X\nℓ∈[d]Θℓz\nγℓ−(z−1),\nwhere the last equality comes from the previous assumption. Rearranging the extreme terms, we\nobtain z <1/(1−P\nℓ∈[d]Θℓ\nγℓ).\nWe now proceed with the proof of Lemma 1.\nProof of Lemma 1. LetI= (A, A′, R, G, ω, c ),u,α,δ, ∆, and ψbe as in the statement. Let also\nt∈[T−1]0be any fixed step of Algorithm 1. Note that the lemma only applies to some tifT≥1,\ni.e., if the algorithm solves the linear program at least once.\nFrom the fact that Algorithm 1 fixes xt′+1(e) =xt′(e) for every esuch that xt′(e)∈ {0,1}and\nevery t′∈[t−1]0, we know that A(xt′+1)⊆ A(xt′) for every t′∈[t−1]0. Since ˜At⊆ A(xt) by\ndefinition, we conclude that ˜At⊆ A(x0) =A(x). In particular, we will make use of the fact that\n˜At=∅whenever ψ= 0. Furthermore, we know that Ft(a)≥2 for every a∈˜At. Summing this\ninequality over a∈˜Atand rearranging, we obtain\n|˜At| ≤\u0016P\na∈˜AtFt(a)\n2\u0017\n1ψ=1\n=\u0016P\na∈A(Ft)Ft(a)−P\na∈A(Ft)\\˜AtFt(a)\n2\u0017\n1ψ=1\n≤\u0016|Ft| − |A(Ft)\\˜At|\n2\u0017\n1ψ=1, (14)\n9\n--- Page 10 ---\nwhere the last inequality follows from the definitions of Ft(a) and A(Ft).\nSimilarly, for each ℓ∈[d] we know from the definition of ˜Gt\nℓthatFt(ℓ, i)≥αℓ+ 1 for every\ni∈˜Gt\nℓ. Fixing ℓ∈[d], summing the previous inequality over i∈˜Gt\nℓ, and rearranging, we obtain\n|˜Gt\nℓ| ≤\u0016P\ni∈˜Gt\nℓFt(ℓ, i)\nαℓ+ 1\u0017\n=\u0016\f\fS\ni∈˜Gt\nℓFt(ℓ, i)\f\f\nαℓ+ 1\u0017\n=\u0016|Ft| −\f\fFt\\S\ni∈Gℓ(Ft)Ft(ℓ, i)\f\f−\f\fS\ni∈Gℓ(Ft)Ft(ℓ, i)\\S\ni∈˜Gt\nℓFt(ℓ, i)\f\f\nαℓ+ 1\u0017\n(15)\nwhere the first equality uses that |{i∈˜Gt\nℓ:e∈ Ft(ℓ, i)}| ≤ 1 for every e∈ Ftand the last one\nfollows from the fact that [\ni∈˜Gt\nℓFt(ℓ, i)⊆[\ni∈Gℓ(Ft)Ft(ℓ, i)⊆ Ft.\nFinally, from the definition of ˜Rtwe know thatP\n(a,q)∈Ft(r)q(r)≥δ+ 1 for every r∈˜Rt.\nSumming over r∈˜Rtand rearranging, we obtain\n|˜Rt| ≤\u0016P\nr∈˜RtP\n(a,q)∈Ft(r)q(r)\nδ+ 1\u0017\n=\u0016P\n(a,q)∈FtP\nr∈R(Ft)q(r)−P\nr∈R(Ft)\\˜RtP\n(a,q)∈Ft(r)q(r)\nδ+ 1\u0017\n≤\u0016P\n(a,q)∈FtP\nr∈R(Ft)q(r)− |R(Ft)\\˜Rt|\nδ+ 1\u0017\n, (16)\nwhere the last inequality follows from the definitions of Ft(r) and R(Ft).\nWe now use inequalities (14) to (16) to conclude the result. We first consider the case where\nχt= 0. In this case, we claim that\nCt≤\u0016|Ft| − |A(Ft)\\˜At|\n2\u0017\n1ψ=1+\u0016P\n(a,q)∈FtP\nr∈R(Ft)q(r)− |R(Ft)\\˜Rt|\nδ+ 1\u0017\n+X\nℓ∈[d]\u0016|Ft| −\f\fFt\\S\ni∈Gℓ(Ft)Ft(ℓ, i)\f\f−\f\fS\ni∈Gℓ(Ft)Ft(ℓ, i)\\S\ni∈˜Gt\nℓFt(ℓ, i)\f\f\nαℓ+ 1\u0017\n≤\u0016|Ft|\n2\u0017\n1ψ=1+\u0016ω∗|Ft|\nδ+ 1\u0017\n+X\nℓ∈[d]\u0016|Ft|\nαℓ+ 1\u0017\n≤|Ft|\n21ψ=1+ω∗|Ft|\nδ+ 1+X\nℓ∈[d]|Ft|\nαℓ+ 1=\u00121ψ=1\n2+ω∗\nδ+ 1+X\nℓ∈[d]1\nαℓ+ 1\u0013\n|Ft| ≤ |Ft|.\nIndeed, the first inequality follows from inequalities (14) to (16), the second one uses the fact thatP\nr∈R(Ft)q(r)≤ω∗for every q∈ T aand every a∈A, and the last one comes from the fact\nthat αandδsatisfy the conditions in the statement of Theorem 1. The third inequality and the\nequality follow from simple calculations. This allows us to conclude the inequality in the statement.\nMoreover, in order to have equality throughout, we need the second inequality to be tight, which\nyields\n10\n--- Page 11 ---\n(i)|A(Ft)\\˜At|= 0 if ψ= 1;\n(ii)\f\fFt\\S\ni∈Gℓ(Ft)Ft(ℓ, i)\f\f=\f\fS\ni∈Gℓ(Ft)Ft(ℓ, i)\\S\ni∈˜Gt\nℓFt(ℓ, i)\f\f= 0 for every ℓ∈[d];\n(iii)|R(Ft)\\˜Rt|= 0 andP\nr∈R(Ft)q(r) =ω∗for every ( a, q)∈ Ft.\nIt is not hard to see that these properties are equivalent to items (i) to (iii) in the statement.\nWe now consider the case with χt= 1. From the statement of Theorem 1, we have two subcases:\neither inequality (7) holds strictly and ∆ ≥1\n1−\u00001ψ=1\n2+P\nℓ∈[d]1\nαℓ+1+ω∗\nδ+1\u0001−1, or ∆ ≥2 and ψ= 1.\nIn the first case, we claim that\nCt≤\u0016|Ft| − |A(Ft)\\˜At|\n2\u0017\n1ψ=1+$P\n(a,q)∈FtP\nr∈R(Ft)q(r)\n|Ft||Ft| − |R(Ft)\\˜Rt|\nδ+ 1%\n+X\nℓ∈[d]\u0016|Ft| −\f\fFt\\S\ni∈Gℓ(Ft)Ft(ℓ, i)\f\f−\f\fS\ni∈Gℓ(Ft)Ft(ℓ, i)\\S\ni∈˜Gt\nℓFt(ℓ, i)\f\f\nαℓ+ 1\u0017\n+ 1\n≤ |Ft|.\nIndeed, the first inequality follows from inequalities (14) to (16) and the second one from Lemma 2.\nThe lemma applies directly because\n1ψ=1\n2+X\nℓ∈[d]1\nαℓ+ 1+ω∗\nδ+ 1<1,\nP\n(a,q)∈FtP\nr∈R(Ft)q(r)\n|Ft|≤ω∗,and (17)\n|Ft| ≥ |A(Ft)\\˜At| ≥∆ + 1 ≥1\n1−\u00001ψ=1\n2+P\nℓ∈[d]1\nαℓ+1+ω∗\nδ+1\u0001,\nwhere the first inequality follows from the assumption that inequality (7) holds strictly, the second\none from the fact thatP\nr∈R(Ft)q(r)≤ω∗for every q∈ Taanda∈A, and the last one from the\ndefinition of χtin Algorithm 1 and the lower bound that we assumed on ∆. Furthermore, if we\nhaveCt=|Ft|, Lemma 2 implies that\n(i)|A(Ft)\\˜At|= 0 if ψ= 1;\n(ii)\f\fFt\\S\ni∈Gℓ(Ft)Ft(ℓ, i)\f\f=\f\fS\ni∈Gℓ(Ft)Ft(ℓ, i)\\S\ni∈˜Gt\nℓFt(ℓ, i)\f\f= 0 for every ℓ∈[d];\n(iii)|R(Ft)\\˜Rt|= 0 and inequality (17) is tight, thusP\nr∈R(Ft)q(r) =ω∗for every ( a, q)∈ Ft.\nAs before, these properties are equivalent to items (i) to (iii) in the statement.\nWe finally consider the case with χt= 1, ∆ ≥2 and ψ= 1. From the definition of χtin\nAlgorithm 1, we know that\n|A(Ft)\\˜At| ≥∆ + 1 ≥3, (18)\nand from inequality (7) in Theorem 1 we know that\nX\nℓ∈[d]1\nαℓ+ 1+ω∗\nδ+ 1≤1\n2. (19)\n11\n--- Page 12 ---\nTherefore, we obtain\nCt≤\u0016|Ft| − |A(Ft)\\˜At|\n2\u0017\n+X\nℓ∈[d]\u0016|Ft|\nαℓ+ 1\u0017\n+\u0016ω∗|Ft|\nδ+ 1\u0017\n+ 1\n≤\u0016|Ft| −3\n2\u0017\n+X\nℓ∈[d]\u0016|Ft|\nαℓ+ 1\u0017\n+\u0016ω∗|Ft|\nδ+ 1\u0017\n+ 1\n≤|Ft|\n2−3\n2+X\nℓ∈[d]|Ft|\nαℓ+ 1+ω∗|Ft|\nδ+ 1+ 1\n=\u00121\n2+X\nℓ∈[d]1\nαℓ+ 1+ω∗\nδ+ 1\u0013\n|Ft| −1\n2≤ |Ft| −1\n2,\nwhere the first inequality follows from inequalities (14) to (16) and the facts that ψ= 1 andP\nr∈R(Ft)q(r)≤ω∗for every q∈ Taanda∈A, the second one from inequality (18), and the last\none from inequality (19). The third inequality and the equality follow from simple calculations.\nSinceCtand|Ft|are integers, we conclude that Ct≤ |Ft| −1.\nEquipped with Lemma 1, we now show Theorem 1. Given an instance and a fractional allocation\nx, we prove that the outcome yof Algorithm 1 satisfies all conditions stated in the theorem. That\nthe algorithm terminates follows from Lemma 1, as we show that the properties stated therein\nwhen the inequality is tight contradict the linear independence of the set of equality constraints.\nThe running time is obtained by bounding the size of the linear program solved in each step\nand observing that its size also constitutes an upper bound for the number of iterations of the\nalgorithm. That ysatisfies the claimed notion of approximation is the most demanding part of\nthe proof, requiring an understanding of the number and structure of the fractional variables upon\ntermination of the iterative rounding procedure.\nProof of Theorem 1. We consider an instance I= (A, A′, R, G, ω, c ), a fractional allocation x, util-\nity functions ua:Ta→R+for each a∈A, and values ψ∈ {0,1},α∈Nd\n0,δ∈N0, and ∆ ∈N0\nsatisfying the conditions in the statement. We let y=xT+1be the outcome of Algorithm 1 with\nthis input, and we claim the result for y.\nWe first argue that Algorithm 1 indeed terminates and produces an outcome y. To see this,\nlett∈[T−1]0be an arbitrary step and observe that LP( I, u,˜xt,˜At,˜Gt,˜Rt, χt) has|Ft|variables\nandCtequality constraints. From Lemma 1, we thus know that the linear program either has more\nvariables than equality constraints, or it has the same number of variables as equality constraints\nand items (i) to (iii) in the statement of that lemma hold. We claim that, in the latter case, the\nset of equality constraints is not linearly independent.\nClaim 1. IfCt=|Ft|, the equality constraints of LP(I, u,˜xt,˜At,˜Gt,˜Rt, χt)are not linearly inde-\npendent.\nProof. Adding constraints (11) over all resources r∈˜Rtyields\nX\nr∈˜RtX\n(a,q)∈Ft(r)q(r)·y(a, q) =X\nr∈˜RtX\n(a,q)∈Ft(r)q(r)·˜xt(a, q)\n⇐⇒X\nr∈R(Ft)X\n(a,q)∈Ft(r)q(r)·y(a, q) =X\nr∈R(Ft)X\n(a,q)∈Ft(r)q(r)·˜xt(a, q)\n12\n--- Page 13 ---\n⇐⇒X\n(a,q)∈FtX\nr∈R(Ft)q(r)·y(a, q) =X\n(a,q)∈FtX\nr∈R(Ft)q(r)·˜xt(a, q)\n⇐⇒X\n(a,q)∈Ftω∗·y(a, q) =X\n(a,q)∈Ftω∗·˜xt(a, q)\n⇐⇒X\n(a,q)∈Fty(a, q) =X\n(a,q)∈Ft˜xt(a, q), (20)\nwhere we used item (iii) of Lemma 1 to replace ˜RtbyR(Ft) in the first equivalence andP\nr∈R(Ft)q(r)\nbyω∗in the third equivalence.\nWe now make use of the fact that, due to the definition of ψ, we either have ψ= 1 or d≥2 (or\nboth). If ψ= 1, adding constraints (8) over all agents a∈˜Atyields\nX\na∈˜AtX\ne∈Ft(a)y(e) =|˜At| ⇐⇒X\na∈A(Ft)X\ne∈Ft(a)y(e) =X\ne∈Ft˜xt(e)⇐⇒X\ne∈Fty(e) =X\ne∈Ft˜xt(e),\nwhere we used item (i) of Lemma 1 to replace ˜AtbyA(Ft) and the fact thatP\ne∈Ft(a)˜xt(e) = 1\nfor every a∈˜At. Since this equality and equality (20) are the same, we conclude that the set of\nconstraints is not linearly independent, as claimed. If d≥2, adding constraints (10) over all i∈˜Gt\nℓ\nfor any fixed ℓ∈[d] yields\nX\ni∈˜Gt\nℓX\ne∈Ft(ℓ,i)u(e)·y(e) =X\ni∈˜Gt\nℓX\ne∈Ft(ℓ,i)u(e)·˜xt(e)\n⇐⇒X\ni∈Gℓ(Ft)X\ne∈Ft(ℓ,i)u(e)·y(e) =X\ni∈Gℓ(Ft)X\ne∈Ft(ℓ,i)u(e)·˜xt(e)\n⇐⇒X\ne∈Ftu(e)·y(e) =X\ne∈Ftu(e)·˜xt(e),\nwhere we used item (ii) of Lemma 1 to replace ˜Gt\nℓbyGℓ(Ft) in the first equivalence and to conclude\nthat∪i∈Gℓ(Ft)Ft(ℓ, i) =∪a∈AFt(a) =Ftdue toS\ni∈Gℓ(Ft)Gℓ,i=A(Ft) in the last equivalence.\nSince the last equality is independent of ℓ, whenever d≥2 we have that the constraints for ℓ, ℓ′∈[d]\nwith ℓ̸=ℓ′are linearly dependent.\nDue to Claim 1, whenever LP( I, u,˜xt,˜At,˜Gt,˜Rt, χt) has the same number of variables as equal-\nity constraints, we can delete an equality constraint and obtain an equivalent linear program with\nmore variables than equality constraints. Thus, the extreme point xt+1either has some integral\nentry or satisfies an inequality constraint with equality. In the former case, this reduces the number\nof variables in the iteration t+1; in the latter case, it reduces the number of inequality constraints.\nSince an integral entry of xtnever becomes fractional at xt′with t′> tand an equality constraint at\ntnever becomes an inequality constraint at t′> t, we conclude that the algorithm terminates. More-\nover, in each iteration the algorithm performs operations that take time linear in |A|,|R|,P\nℓ∈[d]kℓ,\nand|Ft|, while the linear program has |Ft|variables and O\u0000\n|A|+|R|+P\nℓ∈[d]kℓ+|Ft|\u0001\nconstraints.\nSince|Ft| ≤ |A| · |{R′⊆R:|R′| ≤ω∗}|=O(|A| · |R|ω∗), we conclude that the algorithm runs in\ntime polynomial in |A|, k1, . . . , k d, and|R|ω∗.\nIn the remainder of the proof, we show that ysatisfies the properties claimed in the statement;\ni.e., that it is a rounding of xand that it is an ( α, δ,∆)-approximation of xwith respect to u.\nThat it is a rounding of xis straightforward, since whenever xt(e)∈ {0,1}for some e∈ Eand\nsome t∈[T]0, the algorithm fixes xt+1(e) =xt(e), thus y(e) =xtholds as well. To prove that yis\n13\n--- Page 14 ---\nan (α, δ,∆)-approximation of xwith respect to uis more demanding, as we need to verify that y\nsatisfies constraints (1)-(2) and (4)-(6).\nTo see that ysatisfies the set of constraints (1), let a∈A′and note that, since xis a fractional\nresource allocation, it satisfies the set of constraints (1). Thus, for every t∈[T−1]0such that\na∈A(Ft) we have that a∈˜At, so constraint (8) ensuresP\nq∈Taxt+1(a, q) =P\ne∈Ft(a)xt+1(e) = 1 .\nFor every t∈[T−1]0such that a /∈A(Ft), we have that xt+1(a, q) =xt(a, q) for every q∈ Ta,\nso the same equality holds. When the algorithm terminates, we have ˜At=∅and thus a /∈A(Ft),\nwhich implies the existence of a unique q∈ Tasuch that xT(a, q) = 1. The algorithm thus fixes\nxT+1(a, q) =xT(a, q) for every q∈ Taand we conclude.\nTo see that ysatisfies the set of constraints (2), we fix a∈A\\A′. For every t∈[T−1]0\nsuch that a∈A(Ft), either constraint (8) or constraint (9) guarantees thatP\nq∈Taxt+1(a, q) =P\ne∈Ft(a)xt+1(e)≤1.For every t∈[T−1]0such that a /∈A(Ft), we have that xt+1(a, q) =xt(a, q)\nfor every q∈ Ta, so the same equality holds. In the final step, we either have a∈A(FT) and at\nmost one e∈ FT(a) is rounded up to ensure thatP\ne∈FT(a)xT+1(e)≤1, or a /∈A(FT) and then\nxT+1(a, q) =xT(a, q) for every q∈ Ta.\nTo prove that ysatisfies the set of inequalities (4), we fix ℓ∈[d] and i∈[kℓ] arbitrarily and\ndefine t(ℓ, i) = max {t∈ {− 1,0,1, . . . , T −1}:|Ft(ℓ, i)| ≥αℓ+ 1}as the latest step at which Gℓ,i\nhasαℓ+ 1 or more associated fractional entries in Ft; note that we fix t(ℓ, i) =−1 if this never\noccurs. Then, for every t∈[t(ℓ, i)]0, it holds that\nUℓ,i(xt+1) =X\n(a,q)∈E\\Ft:a∈Gℓ,iua(q)·xt+1(a, q) +X\ne∈Ft(ℓ,i)u(e)·xt+1(e)\n=X\n(a,q)∈E\\Ft:a∈Gℓ,iua(q)·xt(a, q) +X\ne∈Ft(ℓ,i)u(e)·xt(e) =Uℓ,i(xt),\nwhere the second equality follows from the fact that Algorithm 1 fixes xt+1(e) =xt(e) for every\ne∈ E \\ Ftand from constraint (10). Thus, Uℓ,i(xt(ℓ,i)+1) =Uℓ,i(x0) =Uℓ,i(x) and we obtain\n|Uℓ,i(y)−Uℓ,i(x)|=|Uℓ,i(xT+1)−Uℓ,i(xt(ℓ,i)+1)|\n=\f\f\f\fX\ne∈Ft(ℓ,i)+1(ℓ,i)u(e)·\u0000\nxT+1(e)−xt(ℓ,i)+1(e)\u0001\f\f\f\f\n≤X\ne∈Ft(ℓ,i)+1(ℓ,i)u(e)·\f\fxT+1(e)−xt(ℓ,i)+1(e)\f\f<\f\fFt(ℓ,i)+1(ℓ, i)\f\f·U∗\nℓ,i,\nwhere we used the triangle inequality, that xT+1(e)∈ {⌊xt(ℓ,i)+1(e)⌋,⌈xt(ℓ,i)+1(e)⌉}for every e∈\nFt(ℓ,i)+1(ℓ, i), and that xT+1(e) =xt(ℓ,i)+1(e) for every other e. From the definition of t(ℓ, i) we\nhave|Ft(ℓ,i)+1(ℓ, i)| ≤αℓ, so we conclude that |Uℓ,i(y)−Uℓ,i(x)|< α ℓ·U∗\nℓ,i.\nWe proceed in a similar way to prove that ysatisfies the set of inequalities (5). We fix r∈R\nand define t(r) = max\b\nt∈ {− 1,0,1, . . . , T −1}:P\n(a,q)∈Ft(r)q(r)≥δ+ 1\t\nas the latest step at\nwhich rhasδ+ 2 or more associated fractional entries in Ft; note that we fix t(r) =−1 if this\nnever occurs. Then, for every t∈[t(r)]0,\nX\n(a,q)∈Eq(r)·xt+1(a, q) =X\n(a,q)∈E\\Ft(r)q(r)·xt+1(a, q) +X\n(a,q)∈Ft(r)q(r)·xt+1(a, q)\n=X\n(a,q)∈E\\Ft(r)q(r)·xt(a, q) +X\n(a,q)∈Ft(r)q(r)·xt(a, q)\n14\n--- Page 15 ---\n=X\n(a,q)∈Eq(r)·xt(a, q),\nwhere the second equality follows from the fact that Algorithm 1 fixes xt+1(e) =xt(e) for every\ne∈ E \\ Ftand from constraint (11). Thus,P\n(a,q)∈Eq(r)·xt(r)+1(a, q) =P\n(a,q)∈Eq(r)·x0(a, q) =P\n(a,q)∈Eq(r)·x(a, q), and we obtain\n\f\f\f\fX\n(a,q)∈Eq(r)·(y(a, q)−x(a, q))\f\f\f\f=\f\f\f\fX\n(a,q)∈Ft(r)+1(r)q(r)·\u0000\nxT+1(a, q)−xt(r)+1(a, q)\u0001\f\f\f\f\n≤X\n(a,q)∈Ft(r)+1(r)q(r)·\f\fxT+1(a, q)−xt(r)+1(a, q)\f\f\n<X\n(a,q)∈Ft(r)+1(r)q(r),\nwhere we used the triangle inequality, that xT+1(e)∈ {⌊xt(r)+1(e)⌋,⌈xt(r)+1(e)⌉}for every e∈\nFt(r)+1(r), and that xT+1(e) =xt(r)+1(e) for every other e. From the definition of t(r) we know\nthatP\n(a,q)∈Ft(r)+1(r)q(r)≤δ, so we conclude that |P\n(a,q)∈Eq(r)·(y(a, q)−x(a, q))|< δ.\nFinally, to show that ysatisfies inequality (6), we define t∗= min {t∈[T]0:A(Ft)\\˜At≤∆}\nas the first step at which there are ∆ or less agents in A(Ft)\\˜A. Note that t∗≤T, since this\ninequality is guaranteed for T. For every t < t∗, we know that\nX\n(a,q)∈Eωa·xt+1(a, q) =X\n(a,q)∈E\\Ftωa·xt+1(a, q) +X\n(a,q)∈Ftωa·xt+1(a, q)\n=X\n(a,q)∈E\\Ftωa·xt(a, q) +X\n(a,q)∈Ftωa·xt(a, q) =X\n(a,q)∈Eωa·xt(a, q),\nwhere the second equality follows from the fact that Algorithm 1 fixes xt+1(e) =xt(e) for every\ne∈ E \\ Ftand from constraint (12), since χt= 1. Therefore,\nX\n(a,q)∈Eωa·xt∗(a, q) =X\n(a,q)∈Eωa·x0(a, q) =X\n(a,q)∈Eωa·x(a, q). (21)\nWe now show two claims that will imply that (i) agents in A(Ft∗)\\˜At∗are the only agents\nwhose associated allocation can deviate; and (ii) for each of these agents, the deviation in terms of\nresources is at most ω∗.\nClaim 2. For every t′∈[T]0anda∈A\\(A(Ft′)\\˜At′), it holdsP\nq∈Ta\u0000\ny(a, q)−xt′(a, q)\u0001\n= 0.\nProof. We fix a∈A\\(A(Ft′)\\˜At′) and distinguish two cases. If a∈A\\A(Ft′), then for every\nq∈ Taand every t≥t′we know that xt+1(a, q) =xt(a, q). Then, y(a, q) =xt′(a, q) for every q∈ Ta\nand the equality in the statement follows.\nOn the other hand, if a∈˜At′, let t(a) = max {t∈[T−1]0:a∈˜At}be the latest step in\nwhich abelongs to ˜At. Note that t(a)≥t′because of our assumption. Furthermore, for every\nt∈ {t′, . . . , t (a)}we have that a∈˜At. Otherwise, we would have |Ft′(a)| ≥2,|Ft(a)| ≤1 for some\nt∈ {t′+ 1, . . . , t (a)−1}, and|Ft(a)(a)| ≥2, a contradiction to the fact that Ft+1(a)⊆ Ft(a) for\nevery t∈[T−1]0. Therefore, for every t∈ {t′, . . . , t (a)}we obtain\nX\nq∈Taxt+1(a, q) =X\ne∈({a}×Ta)\\Ft(a)xt+1(e) +X\ne∈Ft(a)xt+1(e)\n15\n--- Page 16 ---\n=X\ne∈({a}×Ta)\\Ft(a)xt(e) +X\ne∈Ft(a)xt(e) =X\nq∈Taxt(a, q),\nwhere the second equality follows from the fact that Algorithm 1 fixes xt+1(e) =xt(e) for every\ne∈ E \\ Ftand from constraint (8). For t∈ {t(a) + 1, . . . , T }, we know that a /∈A(Ft) and thus\nxt+1(a, q) =xt(a, q) for every q∈ Ta. Combining these two facts, we conclude that\nX\nq∈Tay(a, q) =X\nq∈TaxT+1(a, q) =X\nq∈Taxt(a)+1(a, q) =X\nq∈Taxt′(a, q).\nClaim 3. For every a∈A(Ft∗)\\˜At∗, it holds |P\nq∈Ta\u0000\ny(a, q)−xt∗(a, q)\u0001\n|<1.\nProof. We fix a∈A(Ft∗)\\˜At∗and define t(a) = max {t∈[T]0:a∈A(Ft)\\˜At}. Note that\nt(a)≥t∗. We first consider the case with t(a)< T. Since 0 <P\nq∈Taxt∗(a, q)<1 due to the\ndefinition of t∗andP\nq∈Taxt(a)+1(a, q)≤1 due to constraint (9), we have that\n\f\f\f\fX\nq∈Ta\u0000\nxt(a)+1(a, q)−xt∗(a, q)\u0001\f\f\f\f<1.\nSince a /∈A(Ft(a)+1)\\˜At(a)+1, we know from Claim 2 thatP\nq∈Ta(y(a, q)−xt(a)+1(a, q)) = 0.\nCombining these two facts, we obtain\n\f\f\f\fX\nq∈Ta\u0000\ny(a, q)−xt∗(a, q)\u0001\f\f\f\f<1,\nas claimed.\nIft(a) =T, we know thatP\nq∈Taxt(a)+1(a, q)≤1 from the definition of xT+1in Algorithm 1.\nSince we know that 0 <P\nq∈Taxt∗(a, q)<1 from the definition of t∗, we conclude once again that\n\f\f\f\fX\nq∈Ta\u0000\ny(a, q)−xt∗(a, q)\u0001\f\f\f\f=\f\f\f\fX\nq∈Ta\u0000\nxt(a)+1(a, q)−xt∗(a, q)\u0001\f\f\f\f<1.\nWe can now directly conclude that ysatisfies inequality (6) using the previous claims, since\n\f\f\f\fX\na∈AX\nq∈Taωa·(y(a, q)−x(a, q))\f\f\f\f=\f\f\f\fX\na∈AωaX\nq∈Ta\u0000\ny(a, q)−xt∗(a, q)\u0001\f\f\f\f\n≤X\na∈A(Ft∗)\\˜At∗ωa·\f\f\f\fX\nq∈Ta\u0000\ny(a, q)−xt∗(a, q)\u0001\f\f\f\f\n< ω∗· |A(Ft∗)\\˜At∗| ≤ω∗·∆,\nwhere the equality follows from (21), the first inequality from Claim 2 and the triangle inequality,\nthe second one from Claim 3 and ωa≤ω∗, and the last one from the definition of t∗.\n16\n--- Page 17 ---\n4 Applications\nIn this section, we show how to use our rounding Theorem 1 to get approximation guarantees for\nseveral resource allocation problems that fall in our MCRA setting. In Section 4.1, we provide\nnovel approximation guarantees for MCRA instances under group fairness constraints by rounding\nan optimal solution of a convex program used to model fairness across groups. Then, in Section 4.2,\nwe show how our framework can also be combined with stability requirements to obtain approx-\nimation guarantees for near-feasible stable allocation under group fairness constraints. Finally,\nin Section 4.3, we provide enhanced guarantees for near-feasible allocations in multidimensional\npolitical apportionment.\n4.1 Group-fairness in Resource Allocation\nWe consider a fairly general resource allocation setting where every agent ahas a certain demand of\nωaresources and a certain utility for each bundle, and the goal is to assign exactly one bundle to each\nagent. Formally, an instance of the assignment-MCRA problem is a tuple I= (A, R, E, G, ω, c, u ),\nwhere A, R, G, ω , and care structured in the same way as in the MCRA, we have a utility function\nua:Ta→R+for each agent a∈A, and for every pair ( a, r)∈E⊆A×Rwe say that risacceptable\nfora. We continue to denote E={(a, q) :a∈A, q∈ Ta}andω∗= max a∈Aωa.\nFor a given instance and an agent a∈A, we let Ta,Ebe the set of ωa-bundles q∈ Tasuch\nthat ( a, r)∈Efor every r∈Rwith q(r)≥1, i.e., bundles made of acceptable resources for a. To\ndistinguish the notation from that of the previous section, we write M={(a, q) :a∈A, q∈ Ta,E}\nfor the set of feasible agent-bundle pairs in this context A mapping xonMis a (fractional)\nresource allocation for Iif its natural extension x′onE, where x′(a, q) =x(a, q) for ( a, q)∈ M and\nx′(a, q) = 0 for ( a, q)∈ E \\M , is a (fractional) resource allocation for the instance ( A, A, R, G, ω, c )\nof MCRA, i.e., A′=Aso every agent is allocated exactly one bundle. We call an instance of\nassignment-MCRA fractionally feasible if it admits at least one fractional resource allocation.\nGroup fairness. Similarly to A. et al. [2024], we model the fairness requirements across groups\nby following an optimization-driven approach; namely, our goal is to find a resource allocation\nthat maximizes the sum of a certain objective function of each group’s utility. Formally, given a\nnon-decreasing concave function f:R+→R+and an instance Iof assignment-MCRA, consider\nthe following maximization problem:\nmaxnP\nℓ∈[d]P\ni∈[kℓ]f(Uℓ,i(x)) :xis a fractional resource allocationo\n. [Fair]\nRecall that Uℓ,i(x) corresponds to the utility of group Gℓ,i, and therefore, in [Fair], the goal is to find\na fractional resource allocation that maximizes the total utility across the groups. The program\n[Fair] can capture a broad family of natural fairness notions by setting the appropriate function f,\nlike the classic utilitarian objective with f(z) =zand the celebrated proportionality objective by\nusing f(z) = ln( z); see, e.g., Young [2020]. In general, we say that an optimal solution for [Fair] is\nfair with respect to fand denote it by xf. We remark that this optimal fractional allocation can\nbe computed using state-of-the-art routines for convex optimization due to the concavity of the\nobjective function; see, e.g., Bubeck et al. [2015].\nNear-feasible fair allocations. Given an instance of assignment-MCRA and a non-decreasing\nconcave function f:R+→R+, we say that a mapping y:M → { 0,1}is an ( α, δ,∆+)-approximately\n17\n--- Page 18 ---\nfair allocation with respect to fif the following holds:\nP\nq∈Ta,Ey(a, q) = 1 for every a∈A, (22)\n|Uℓ,i(y)−Uℓ,i(xf)|< α ℓ·U∗\nℓ,i for every ℓ∈[d], i∈[kℓ],(23)\nP\na∈AP\nq∈Ta,Eq(r)·y(a, q)−c(r)≤δ for every r∈R, (24)\nP\nr∈Rmax{0,P\na∈AP\nq∈Ta,Eq(r)·y(a, q)−c(r)} ≤∆+, (25)\nwhere α∈Nd\n0, and δ,∆+∈N0. In such near-feasible allocation, the utility of each group Gℓ,i\ndeviates strictly less than αℓ·U∗\nℓ,ifrom the utilities in the fair with respect to fsolution xf, the\ncapacity of each resource is exceeded by at most δ, and the total excess with respect to the resource\ncapacities is at most ∆+. We remark that since in the assignment-MCRA every agent is binding,\nthe total deviation from xfon the number of allocated resources is always equal to zero; instead,\nwe aggregate the excess usage of each resource as a sensible parameter in this setting. This notion\nof approximately fair allocations is closely related to those by Procaccia et al. [2024] and A. et al.\n[2024], but more general: The former work does not take the individual deviations from resource\ncapacities into account, while the latter imposes the group utilities in the fair fractional allocation as\nlower bounds only. Using our rounding Theorem 1 along with a bound on the number of fractional\nvariables of the initial fair allocation, we get the following guarantees for near-feasible allocations.\nTheorem 2. LetIbe a fractionally feasible instance of assignment-MCRA and f:R+→R+a\nnon-decreasing concave function. Let α∈Nd\n0andδ∈N0be such that\nX\nℓ∈[d]1\nαℓ+ 1+ω∗\nδ+ 2≤1\n2,\nand let ∆+= min {(ω∗−1)|A|+ω∗|R|+ (ω∗+ 1)P\nℓ∈[d]kℓ, δ|R|}. Then, there exists an (α, δ,∆+)-\napproximately fair allocation for Iwith respect to f. Furthermore, this allocation can be found in\ntime polynomial in |A|,|R|ω∗, andP\nℓ∈[d]kℓ.\nProof. LetI= (A, R, E, G, ω, c, u ),f,α,δ, and ∆+be as in the statement. We let xfbe an optimal\nsolution for [Fair] constructed as follows. We first solve the program [Fair] and let x∗:M → [0,1]\nbe an arbitrary optimal solution. We now let xfbe any extreme point of the polytope containing\nall fractional resource allocations that guarantee each group as much utility as x∗; i.e., the following\npolytope with variables x:M → [0,1]:\nX\nq∈Ta,Ex(a, q) = 1 for every a∈A, (26)\nX\na∈AX\nq∈Ta,Eq(r)·x(a, q)≤c(r) for every r∈R, (27)\nUℓ,i(x)≥Uℓ,i(x∗) for every ℓ∈[d], i∈[kℓ]. (28)\nClearly, the extension of xfto the domain E, which has value xf(a, q) = 0 whenever ( a, q)/∈ M ,\nis a fractional resource allocation for the instance ( A, A, R, G, ω, c ) of MCRA. In addition, sinceP\nq∈Ta,Exf(a, q) = 1 for every a, we know that either xfhas only integer components or A(xf)̸=∅.\nIn the former case we conclude the result immediately for xf, so in what follows we assume that\nA(xf)̸=∅. We take ψ= 1 and, since\n1ψ=1\n2+X\nℓ∈[d]1\nαℓ+ 1+ω∗\nδ+ 2≤1,\n18\n--- Page 19 ---\nwe can apply Theorem 1 for this instance and allocation, α,δ+ 1, ∆ = 0, and our utilities uafor\neach agent a∈A. This theorem implies the existence of a rounding y:M → { 0,1}such that\nX\nq∈Ta,Ey(a, q) = 1 for every a∈A, (29)\n|Uℓ,i(y)−Uℓ,i(xf)|< α ℓ·U∗\nℓ,ifor every ℓ∈[d], i∈[kℓ], (30)\f\f\f\fX\na∈AX\nq∈Taq(r)·(y(a, q)−xf(a, q))\f\f\f\f< δ+ 1 for every r∈R. (31)\nWe claim the result for this mapping y. We need to show that ycan be found in time polynomial\nin|A|,|R|ω∗, andP\nℓ∈[d]kℓ, and that it satisfies equality (22) and inequalities (23) to (25).\nThat ymapping can be found in time polynomial in |A|,|R|ω∗, andP\nℓ∈[d]kℓfollows from\nTheorem 1 and the fact that, before applying this theorem, we solve a convex program with\nlinear constraints and a linear program, both with a number of variables and constraints that are\npolynomial in these inputs; see, e.g., Bubeck et al. [2015], Korte and Vygen [2011]. That ysatisfies\nequality (22) and inequality (23) follows immediately from equality (29) and inequality (30). That y\nsatisfies inequality (24) follows from inequality (31), the fact thatP\na∈AP\nq∈Taq(r)·xf(a, q)≤c(r)\nfor every r∈Rsince xfis a fractional resource allocation for I, and thatP\na∈AP\nq∈Taq(r)·y(a, q)\nis an integer value for every r∈R.\nIn what follows, we show that inequality (25) holds when ∆+is defined as in the statement.\nOn the one hand, it is clear that\nX\nr∈Rmax\u001a\n0,X\na∈AX\nq∈Taq(r)·xf(a, q)−c(r)\u001b\n≤X\nr∈Rδ=δ|R|,\nwhere the inequality follows from the fact that xfandδsatisfy inequality (24). Thus, if ∆+=δ|R|,\ninequality (25) is satisfied. To check that this is also the case when ∆+= (ω∗−1)|A|+ω∗|R|+\n(ω∗+ 1)P\nℓ∈[d]kℓ, we follow a similar approach as A. et al. [2024] but for arbitrary ω∗.\nWe need some additional notation. Similarly to that used in Section 3, we let F={e∈ M :\nxf(e)∈(0,1)}denote the agent-bundle pairs corresponding to fractional entries of xf,\nF(a) ={(a′, q)∈ F:a′=a} for every a∈A,\nF(ℓ, i) ={(a, q)∈ F:a∈Gℓ,i} for every ℓ∈[d], i∈[kℓ],\nF(r) ={(a, q)∈ F:q(r)≥1}for every r∈R\ndenote the subset of such pairs associated with a certain agent, group, and resource, respectively,\nandA(F) ={a∈A:|F(a)| ≥1}Gℓ(F) ={i∈[kℓ] :|F(ℓ, i)| ≥1}for each ℓ∈[d], and\nR(F) ={r∈R:|F(r)| ≥1}denote the agents, groups, and resources with at least one associated\nfractional entry of xf.\nWe let ˜R={r∈R:P\na∈AP\nq∈Ta,Eq(r)·xf(a, q) =c(r)}be the subset of resources whose\nassociated constraint (27) is tight at xfand ˜Gℓ={i∈[kℓ] :Uℓ,i(xf) =Uℓ,i(x∗)}the set of groups\nin the ℓth dimension whose associated constraint (28) is tight at xf. Since xfis an extreme point\nof the polytope given by constraints (26) to (28), we know that\n|A(F)|+|˜R|+X\nℓ∈[d]|˜Gℓ|=|F|. (32)\n19\n--- Page 20 ---\nOn the other hand, sinceP\nr∈Rq(r)≤ω∗for all q∈ Taanda∈A, we know that\nX\na∈A(F)|F(a)|+X\nr∈R(F)X\n(a,q)∈F(r)q(r)≤(ω∗+ 1)|F|= (ω∗+ 1)\u0012\n|A(F)|+|˜R|+X\nℓ∈[d]|˜Gℓ|\u0013\n,\nwhere the second equality follows from equality (32). This implies\nX\nr∈˜R\u0012X\n(a,q)∈F(r)q(r)−2\u0013\n+X\nr∈R(F)\\˜RX\n(a,q)∈F(r)q(r)\n≤X\na∈A(F)(|F(a)| −2) +X\nr∈˜R\u0012X\n(a,q)∈F(r)q(r)−2\u0013\n+X\nr∈R(F)\\˜RX\n(a,q)∈F(r)q(r)\n≤(ω∗−1)(|A(F)|+|˜R|) + (ω∗+ 1)X\nℓ∈[d]|˜Gℓ|\n≤(ω∗−1)(|A|+|R|) + (ω∗+ 1)X\nℓ∈[d]kℓ, (33)\nwhere we used in the first inequality that |F(a)| ≥2 for each a∈A(F) sinceP\nq∈Ta,Exf(a, q) = 1.\nWe now make use of the following simple claim to conclude.\nClaim 4. For every r∈R(F), we have\nX\na∈AX\nq∈Ta,Eq(r)·y(a, q)−c(r)≤(P\n(a,q)∈F(r)q(r)−1ifr∈˜RP\n(a,q)∈F(r)q(r) otherwise.\nProof. Letr∈˜R. Since the sumP\n(a,q)∈F(r)q(r)xf(a, q) is an integer by the definition of ˜Rand is\nnon-zero due to r∈R(F), it must be at least 1. From the feasibility of xf, we then have\nX\n(a,q)∈M\\F (r)q(r)·xf(a, q)≤c(r)−X\n(a,q)∈F(r)q(r)·xf(a, q)≤c(r)−1.\nCombining this inequality with the fact that y(a, q) =xf(a, q) for every ( a, q)∈ M \\ F (r) and\ny(a, q)≤1 for every ( a, q)∈ F(r), we obtain\nX\na∈AX\nq∈Ta,Eq(r)·y(a, q)−c(r)≤X\n(a,q)∈M\\F (r)q(r)·xf(a, q) +X\n(a,q)∈F(r)q(r)−c(r)\n≤X\n(a,q)∈F(r)q(r)−1,\nwhich concludes the proof for this case.\nLet now r∈R(F)\\˜R. In this case, the fact that y(a, q) =xf(a, q) for every ( a, q)∈ M \\ F (r)\nandy(a, q)≤1 for every ( a, q)∈ F(r), along with the feasibility of xf, imply\nX\na∈AX\nq∈Ta,Eq(r)·y(a, q)−c(r)≤X\n(a,q)∈M\\F (r)q(r)·xf(a, q) +X\n(a,q)∈F(r)q(r)−c(r)\n≤X\n(a,q)∈F(r)q(r).\n20\n--- Page 21 ---\nWe can now conclude the proof by observing that\nX\nr∈Rmax\u001a\n0,X\na∈AX\nq∈Ta,Eq(r)·y(a, q)−c(r)\u001b\n≤X\nr∈˜R\u0012X\n(a,q)∈F(r)q(r)−2 + 1\u0013\n+X\nr∈R(F)\\˜RX\n(a,q)∈F(r)q(r)\n≤(ω−1)|A|+ω∗|R|+ (ω∗+ 1)X\nℓ∈[d]kℓ,\nwhere the first inequality follows from Claim 4 and the second one from inequality (33). Hence,\ninequality (25) holds when ∆+= (ω∗−1)|A|+ω∗|R|+ (ω∗+ 1)P\nℓ∈[d]kℓ.\nConsequences for proportional fairness. In what follows, we discuss the consequences of our\napproximation guarantees in Theorem 2 for the relevant case of proportional fairness, i.e., when we\ntake f(z) = ln( z) in [Fair]. We recall that in this case, the optimality conditions guarantee that\nany optimal fractional resource allocation xfof [Fair] satisfies\nX\nℓ∈[d]X\ni∈[kℓ]Uℓ,i(x)\nUℓ,i(xf)≤X\nℓ∈[d]kℓfor every fractional resource allocation x,\nwhich is the classic proportional fairness notion [Young, 2020]. Recently, Procaccia et al. [2024]\nstudied the design of school allocation policies with provable proportionality guarantees in the\npresence of groups on the students’ side. Their setting is captured by our assignment-MCRA\nframework when the agents are the students, the resources are the schools, there is a single di-\nmension ( d= 1) with k1many groups, and every student ais assigned to precisely one single\nschool ( ωa= 1) among their acceptable schools Ta,E. Formally, for d= 1 and k1=k, we say that\ny:M → { 0,1}is an ( α, δ,∆+)-approximately proportional allocation if it satisfies (22), (24), (25),\nandUi(y)≥Ui(x)/k−α·U∗\nifor every i∈[k] and every fractional resource allocation x, where we\nhave omitted the dimension subindex.\nThanks to Theorem 2, we can trade off the values of αandδto accommodate the policy-\nmaker priorities in terms of utility approximation and maximum resource capacity augmentation\nfor each resource (i.e., school capacities). For instance, when ω∗= 1, both maximum devia-\ntions can be set to small constants; some pairs in the Pareto frontier defined by Theorem 2 are\n(α, δ)∈ {(2,4),(3,2),(5,1)}. In practice, slight constant deviations from the capacity of each\nschool constitute a natural goal, and this differentiates our result from previous work in this set-\nting, where the focus was restricted to the deviations from group utilities and the total excess of\nallocated resources [A. et al., 2024, Procaccia et al., 2024].\nWhile Theorem 2 has no direct implications for the case where deviations α= 0 from group\nutilities or δ= 0 from school capacities are sought, it is not hard to see that these deviations can\nbe achieved by simply rounding all fractional entries of our initial fair fractional allocation xfup\nor down, respectively. This yields a non-constant deviation with respect to the other objective,\npotentially up to the order of ∆+. We show that this cannot be avoided: If we require α= 0\ndeviations from proportionality, we need to accept non-constant deviations δfrom the schools’\ncapacities; if we require δ= 0 deviation from the schools’ capacities, we need to accept non-constant\ndeviations αfrom proportionality.\nProposition 1. For every α∈Nd\n0andδ,∆+∈N0, there exist instances I,I′of assignment-MCRA\nwith d= 1 such that Idoes not admit a (0, δ,∆+)-approximately proportional allocation and I′\ndoes not admit an (α,0,∆+)-approximately proportional allocation.\n21\n--- Page 22 ---\nForI, we take an instance where all schools have capacity one and all students belong to a\ndifferent group and have positive utility for a single school. Proportionality then implies a large\nviolation of the capacity of this school. For I′, we consider an example that Procaccia et al. [2024]\nused to prove a lower bound, linear in the number of groups, on the smallest possible simultaneous\ndeviation from proportionality and aggregate capacity that an allocation can achieve. It is based on\ncycles of students from two alternating groups and schools of alternating quality, so that forbidding\ncapacity violations leaves a group with zero utility and the other group with a large utility.\nProof of Proposition 1. Letα,δ, and ∆+be as in the statement. For I, letm, n∈Nbe such that\nm≥n, consider agents A={a1, . . . , a n}with aj∈Gjforj∈[n], and resources R={r1, . . . , r m}\nwith capacity c(ri) = 1 for i∈[m]. We consider ωa= 1 for every a∈Aand, for simplicity, replace\nbundles with single resources when referring to utilities and assignments. The utilities are given by\nua(ri) =(\n1 if i= 1,\n0 otherwise ,\nfor each a∈Aandi∈[m]. In order to have a (0 , δ,∆+)-approximately proportional allocation\ny:A×R→ {0,1}, we need that, for every agent a∈A,\nX\nj∈[m]ua(rj)·y(a, rj)≥1\nnmax\u001aX\nj∈[m]ua(rj)·x(a, rj) :xis a resource allocation\u001b\n=1\nn,\nwhere the second inequality comes from the fact that xa:A×R→ {0,1}given by xa(a, r1) = 1\nandxb(b, rj(b)) = 1 for every b∈A\\ {a}, where j:A\\ {a} → [m]\\ {1}is any injective function,\nconstitutes a resource allocation withP\nj∈[m]ua(rj)·x(a, rj) = 1. We thus conclude that y(a, r1) = 1\nfor every a∈Aand thusX\na∈Ay(a, r1)−c(r1) =n−1.\nThe result then follows by taking nsuch that n−1> δ.\nForI′, we let n∈Nbe an even number, partition the agents A= [n] into two equally\nsized groups G1={a1, a2, . . . , a n/2}andG2={b1, b2, . . . , b n/2}, and consider resources R=\n{r1, r2, . . . , r n}with capacities c(r) = 1 for all r∈R. We again consider ωa= 1 for every a∈A\nand replace bundles with single resources when referring to utilities and assignments. The utilities\nare given by\nua(ri) =(\n1 if iis odd ,\n0 otherwise ,\nfor every a∈A. The feasibility set E⊆A×Ris constructed cyclically to enforce the alternation\nbetween agents and resources:\nE=[\ni∈[n/2]{(ai, r2i−1),(ai, r2i)} ∪[\ni∈[n/2−1]{(bi, r2i),(bi, r2i+1)},\nwhere, in slight abuse of notation, we denote rn+1=r1. In order to have an ( α,0,∆+)-approximately\nproportional allocation y:A×R→ {0,1}, we need that y∈ {y1, y2}, where\ny1(ai, rj) =(\n1 if j= 2i−1,\n0 otherwise,y1(bi, rj) =(\n1 if j= 2i,\n0 otherwise,\ny2(ai, rj) =(\n1 if j= 2i,\n0 otherwise,y2(bi, rj) =(\n1 if j= 2i+ 1,\n0 otherwise.\n22\n--- Page 23 ---\nIt is easy to see that\nX\nj∈[n]ua(rj)·y1(a, rj) = 0 for every a∈G2,\nX\nj∈[n]ua(rj)·y2(a, rj) = 0 for every a∈G1.\nHowever, the maximum utilities under some resource allocation is n/2. Indeed, this is precisely\nthe utility attained at y1forG1and at y2forG2. Since the maximum utility for some bundle\nisU∗\n1=U∗\n2= 1 for both groups, we conclude that a deviation of n/2 is required, and the result\nfollows by taking nsuch that n >2α.\nProposition 1 implies that, in a sense, our result providing constant (but non-zero) deviations\nfrom both group utilities and school capacities is the best we can aim for. The search for the\nbest-possible constants is, however, a natural direction for future work.\nWe remark that, in addition to providing more flexibility for the maximum deviations, our\nframework directly handles agent-dependent utility functions, bundles consisting of more than a\nsingle resource, and multiple dimensions for the groups, which arise naturally, e.g., when seeking\nfairness across overlapping groups. Our result opens the door to designing proportional allocation\npolicies under several socio-demographic dimensions, enhancing the policy’s fairness guarantees.\nA new notion of envy-freeness. In the same context of school redistricting ( d= 1, ω∗= 1),\nProcaccia et al. [2024] also studied the existence of approximately envy-free allocations. In their\nwork, an allocation is α-envy-free if for every pair of groups i1, i2∈[k] there is no alternative\nallocation where (i) agents in i1are allocated a subset of those resources allocated to agents in\ni2in the original allocation, and (ii) the utility of group i1increases by more than α·U∗\ni1with\nrespect to the original allocation. Note that this notion only makes sense if the demands of all\nagents are the same and the utilities of agents in the same group are the same, which are modeling\nassumptions in Procaccia et al. [2024].1However, under this envy-freeness notion, they proved a\nstrong impossibility as there is a family of instances for which the deviation grows linearly in the\nnumber of agents.\nTo get around this impossibility, we introduce a relaxed version of envy-freeness, where the\nratio between the total utility of group Gℓ,ifor its allocation and its total utility for the allocation\nof the group Gℓ,jshould not be smaller than the ratio between the sizes of these groups. Note\nthat when groups have unit size, this is equivalent to the classic notion of envy-freeness in fair\ndivision of indivisible goods; e.g., Moulin [2004]. We still consider common demands, i.e., ωa=ω∗\nfor every a∈A. We thus denote the (common) set of possible bundles by Tfor simplicity. We\nsay that an instance of assignment-MCRA is group-homogeneous ifωa=ω∗for every a∈Aand,\nfor every dimension ℓ∈[d], every i∈[kℓ], and every a, b∈Gℓ,i, we have ua(q) =ub(q) for every\nq∈ T. We denote this common (group) utility function by uℓ,i. For a group-homogeneous instance\nof assignment-MCRA, we say that y:M → { 0,1}(resp. [0 ,1]) is an ( α, δ)-approximately envy-free\nallocation (resp. fractional) if it satisfies (22), (24), and\n|Gℓ,i|\n|Gℓ,j|X\nb∈Gℓ,jX\nq∈Tuℓ,i(q)·y(b, q)−Uℓ,i(y)< α ℓ·U∗\nℓ,i (34)\nfor every ℓ∈[d] and i, j∈[kℓ], where α∈Ndandδ,∆∈N. That is, the maximum deviation from\nour notion of envy freeness for each group Gℓ,iis captured by αℓtimes the maximum utility of this\n1In fact, they assume that the utilities of all agents are the same.\n23\n--- Page 24 ---\ngroup for a single resource, and the meaning of the maximum deviation δfrom resource capacities\nis the same as in approximately fair allocations. We omit the total excess ∆+because only the\ntrivial bound δ|R|on this deviation will remain in this case. We obtain the following result.\nTheorem 3. LetIbe a group-homogeneous and fractionally feasible instance of assignment-\nMCRA, and let α∈Nd\n0andδ∈N0be such that\nX\nℓ∈[d]2(kℓ−1)\nαℓ+ 1+ω∗\nδ+ 1≤1\n2.\nThen, there exists an (α, δ)-approximately envy-free allocation for I.\nThese approximately envy-free allocations can be found by applying an iterative rounding proce-\ndure analogous to the one described in Algorithm 1, starting from an envy-free fractional allocation.\nThe difference with our original rounding algorithm is the number of constraints we must maintain\nin each step, which becomes quadratic in the number of groups in each dimension due to the envy-\nfreeness constraints. Because of the similarity with the proof of Theorem 1, we defer the details to\nAppendix A, where we prove the existence of an envy-free fractional allocation and explain how to\nadapt our rounding algorithm to obtain this result. We remark that the condition in Theorem 3\nholds for αℓ∈Θ(dkℓ) for each ℓ∈[d] and δ∈Θ(1), thus breaking the linear dependence in |A|\nfrom the more stringent version by Procaccia et al. [2024].\n4.2 Stable Matchings with Couples\nIn this section, unlike the previous one, the non-existence of fair resource allocations does not come\nfrom group fairness constraints but from stability; while stable matchings are guaranteed to exist\nin the basic single-demand setting [Gale and Shapley, 1962], this is not the case for multi-demand\nagents. To illustrate how our framework can also accommodate stability requirements, we show\nhow our approach exploits the fact that, for agents with demand up to ω∗= 2, the existence of\nfractional allocations satisfying stability is guaranteed, and rounding these allocations preserves\nthis property [Nguyen and Vohra, 2018]. Using our rounding Theorem 1, we can directly recover a\nrecent guarantee by Nguyen and Vohra [2018] for the existence of near-feasible stable allocations,\nand we further extend this setting to handle group fairness requirements and allocation stability to\nguarantee the existence of near-feasible, stable, and fair allocations (Theorem 4).\nInstances and stability. An instance of couples-MCRA is a tuple ( A, R, E, G, c, u, ≻), where\nA,R,E,G,c, and uare structured in the same way as in assignment-MCRA; see Section 4.1\nfor the details. We omit the parameter ωfrom the instance description as we fix ω∗= 2 and\npartition the agents accordingly into A=A1˙∪A2, where ωa= 1 for every a∈A1(single agents )\nandωa= 2 for every a∈A2(couples ). Following the notation introduced in Section 4.1, Ta,E\ndenotes the acceptable bundles for each agent a∈A, andM={(a, q) :a∈A, q∈ Ta,E}is the set\nof feasible agent-bundle pairs. Finally, ≻represents a set of linear orders: ≻ris a linear order over\n{a∈A: (a, q)∈ M} representing the preferences of each resource r∈Rand≻ais a linear order\noverTa,Erepresenting the preferences of each agent a∈A.\nA mapping xonMis a (fractional) resource allocation for Iif its natural extension x′on\nE={(a, q) :a∈A, q∈ Ta}, given by x′(a, q) =x(a, q) for every ( a, q)∈ M andx′(a, q) = 0 for\nevery ( a, q)∈ E\\M , is a (fractional) resource allocation for the instance ( A,∅, R, G, ω, c ) of MCRA,\nwhere we have replaced A′by∅. Note that every instance of couples-MCRA admits a fractional\nallocation due to the absence of binding agents; in particular, the trivial allocation where no agent\n24\n--- Page 25 ---\nis assigned is always feasible. A resource allocation xonMisblocked when some of the following\nthree situations happen:\n1. There is a pair ( a, r) with a∈A1andx(a, q) = 1 such that aprefers rtoq(1) and reither\nhas remaining capacity or prefers aover some other agent allocated in x.\n2. There is a pair ( a, r) with a∈A2andx(a, q) = 1 such that aprefers rover qandreither\nhas remaining capacity for the couple aor prefers aover some other agent(s) allocated in x.\n3. There is a couple a∈A2and two different resources r, r′such that awould prefer to be\nassigned to the resources randr′, one each, over their current allocation in x, and each of the\nresources has remaining capacity or prefers the corresponding element of the couple aover\nsome other agent allocated in x.\nA resource allocation xisstable for the capacities cif it is not blocked.\nFractional allocations and fairness. We now extend our notion of group fairness and approx-\nimately fair allocations from Section 4.1 to the case where we also require stability, provided the\nmaximum demand is ω∗= 2. Consider the following linear program introduced by Nguyen and\nVohra [2018] with variables x:M → [0,1]:\nP\n(a,q)∈Mq(r)·x(a, q)≤c(r) for every r∈R, [LP-Stable]\nP\nq∈Ta,Ex(a, q)≤1 for every a∈A.\nNguyen and Vohra [2018] showed that the polytope given by [LP-Stable] has a dominating extreme\npoint x:M → [0,1] and that any rounding of such point is a stable allocation. Since our use\nof dominating extreme points is restricted to this property, we refer to Nguyen and Vohra [2018]\nfor the precise definition in this setting. In what follows, we exploit this fact to extend our result\nregarding approximate group fairness and find allocations that are both approximately fair and\nstable. Similarly to Section 4.1, given a non-decreasing concave function f:R+→R+and an\ninstance Iof couples-MCRA, we consider the maximization problem\nmaxnP\nℓ∈[d]P\ni∈[kℓ]f(Uℓ,i(x)) :xis a dominating extreme point for [LP-Stable]o\n,[Fair-Stable]\nwhere we have now restricted our feasible set to dominating extreme points of the polytope given\nby [LP-Stable] so that rounding any such point will give a stable allocation. We say that an optimal\nsolution for [Fair-Stable] is stable and fair with respect to fand denote it by xf.\nIn terms of computational efficiency, it is unknown whether the problem of finding a dominating\nextreme point of a polytope defined by hypergraph constraints such as [LP-Stable] can be solved in\npolynomial time. This has only been answered in the positive for special cases that do not capture\nthe polytope [LP-Stable], e.g., Chandrasekaran, Faenza, He, and Sethuraman [2025], Faenza, He,\nand Sethuraman [2025], and thus we do not know whether the optimization program [Fair-Stable]\ncan be solved efficiently. We remark that this is the case even without the group fairness, i.e., in\nthe setting of Nguyen and Vohra [2018].\nNear-feasible stable and fair allocations. Given an instance of couples-MCRA and a non-\ndecreasing concave function f:R+→R+, we say that y:M → { 0,1}is an ( α, δ,∆)-approximately\n25\n--- Page 26 ---\nfair stable allocation with respect to f, forα∈Nd\n0andδ,∆∈N, if the following holds:\nP\nq∈Ta,Ey(a, q)≤1 for every a∈A, (35)\n|Uℓ,i(y)−Uℓ,i(xf)|< α ℓ·U∗\nℓ,i for every ℓ∈[d], i∈[kℓ], (36)\nP\na∈AP\nq∈Ta,Eq(r)·y(a, q)−c(r)≤δ for every r∈R, (37)\nP\na∈AP\nq∈Ta,Eωa·y(a, q)−P\nr∈Rc(r)≤2∆, (38)\nandyis stable for capacities c′:R→R+given by c′(r) =P\na∈AP\nq∈Ta,Eq(r)·y(a, q), i.e., by the\nactual number of assigned agents. We remark that the capacity violation conditions (37) and (38)\ncan alternatively be expressed in absolute values with respect to the stable and fair allocation xf,\nwhich may be more suitable for cases with lower bounds on the capacities; we stick to our setting\nwith upper bounds for consistency. A direct application of Theorem 1 yields the following result.\nTheorem 4. LetIbe a fractionally feasible instance of couples-MCRA and f:R+→R+a non-\ndecreasing concave function. Let α∈Nd\n0andδ∈N0be such that\nX\nℓ∈[d]1\nαℓ+ 1+2\nδ+ 2≤1\n2.\nThen, there exists an (α, δ,2)-approximately fair stable allocation for Iwith respect to f.\nProof. LetI= (A, R, E, G, c, u, ≻),f,α, and δbe as in the statement. We let xfbe any optimal\nsolution for [Fair-Stable]. Clearly, the extension of xfto the domain E, which has value xf(a, q) = 0\nwhenever ( a, q)/∈ M, is a fractional resource allocation for the instance ( A,∅, R, G, ω, c ) of MCRA.\nWe take ψ= 1 and, since\n1ψ=1\n2+X\nℓ∈[d]1\nαℓ+ 1+2\nδ+ 2≤1,\nwe can apply Theorem 1 for this instance and allocation, ψ,α,δ+ 1, ∆ = 2, and our utilities ua\nfor each agent a∈A, implying the existence of a rounding y:M → { 0,1}such that\nX\nq∈Ta,Ey(a, q)≤1 for every a∈A, (39)\n|Uℓ,i(y)−Uℓ,i(xf)|< α ℓ·U∗\nℓ,i for every ℓ∈[d], i∈[kℓ], (40)\f\f\f\fX\na∈AX\nq∈Ta,Eq(r)·\u0000\ny(a, q)−xf(a, q)\u0001\f\f\f\f< δ+ 1 for every r∈R, (41)\n\f\f\f\fX\na∈AX\nq∈Ta,Eωa·\u0000\ny(a, q)−xf(a, q)\u0001\f\f\f\f<2·∆. (42)\nWe claim the result for this mapping y. We need to show that yis stable for capacities c′:R→R+\ngiven by c′(r) =P\na∈AP\nq∈Ta,Eq(r)·y(a, q), and that it satisfies inequalities (35) to (38). The\nformer follows from Nguyen and Vohra [2018, Lemma 3], because xfis a dominating extreme point\nfor [LP-Stable] and yis a rounding of xf.\nThat ysatisfies inequalities (35) and (36) follows immediately from equality (39) and inequal-\nity (40). That ysatisfies (37) follows from (41), the fact thatP\na∈AP\nq∈Ta,Eq(r)·xf(a, q)≤c(r) for\nevery r∈Rsince xfis feasible for [LP-Stable] and thus a fractional resource allocation for I, and\n26\n--- Page 27 ---\nthe fact thatP\na∈AP\nq∈Ta,Eq(r)·y(a, q) is an integer value for every r∈R. Finally, that ysatisfies\ninequality (38) follows from inequality (42) and the fact thatP\na∈AP\nq∈Ta,Eωa·xf(a, q)≤P\nr∈Rc(r)\nsince xfis feasible for [LP-Stable] and thus a fractional resource allocation for I.\nWe remark that in the case without fairness constraints (i.e., d= 0), we recover the bounds\nδ= ∆ = 2 from Nguyen and Vohra [2018]. Our result, however, allows us to incorporate these\nconstraints while keeping the deviations from resource capacities bounded by small constants. For\nexample, in the case of a one-dimensional partition of the agents, one can guarantee deviations from\ngroup fairness of at most α1= 5 by increasing the deviations δto 4, while keeping the deviation\nfrom the aggregate capacity at ∆ = 2.\n4.3 Multidimensional Apportionment\nIn the multidimensional apportionment problem , introduced by Balinski and Demange [1989a,b]\nfor the case of two dimensions and extended by Cembrano et al. [2022] to an arbitrary number of\ndimensions d≥2, the goal is to allocate the seats of a representative body proportionally across\nseveral dimensions. Classic apportionment methods, e.g., divisor methods or Hamilton’s method,\naim to assign seats to districts proportionally to their population or political parties proportionally\nto their electoral support [Balinski and Young, 2010, Pukelsheim, 2017]. However, one may consider\nseveral natural dimensions to decide the seat allocation, both by requiring proportionality across\nthem with respect to their electoral support and by incorporating bounds on the number of seats\nthat groups within them should receive. In addition to political parties and geographical divisions,\nnatural dimensions include demographics of the elected members such as gender or ethnicity; see,\ne.g., Arnosti et al. [2024], Cembrano et al. [2024], Mathieu and Verdugo [2024].\nUsing our rounding Theorem 1, we improve over the result by Cembrano et al. [2022] to get\nenhanced near-feasibility guarantees for multidimensional apportionment. Remarkably, we can\nfurther bound the total deviation from the house size, while the rounding algorithm by Cembrano\net al. only controls the deviations on each dimension.\nSignpost sequences and rounding rules. The core idea behind proportional apportionment,\nand in particular divisor methods, is to scale and round . Then, to formally introduce the multi-\ndimensional apportionment problem, we need to define the idea of a rounding rule , which in turn\nrequires the definition of a signpost sequence . A signpost sequence is a function s:N0→R+such\nthats(0) = 0, s(t)∈[t−1, t] for every t∈N, and s(t+ 1)> s(t) for every t∈N. Given a signpost\nsequence s, the rounding rule J·Ksis defined as follows: For every q∈R+, we let JqKs={t}if\ns(t)< q < s (t+ 1), and {t−1, t}ifq=s(t). In simple terms, any value q∈[t−1, t] gets rounded\nup if q > s (t), down if q < s (t), and we allow both t−1 and tas possible roundings is q=s(t).\nInstances and near-feasible apportionments. An instance of the multidimensional appor-\ntionment problem, or MA for short, is a tuple I= (G, E, V, b, B, c ), where Gis structured as in\nMCRA, E⊆Qd\nℓ=1Gℓ,i,V∈NE,bℓ,i, Bℓ,i∈N0for every ℓ∈[d] and i∈[kℓ], and c∈N. Each ℓ∈[d]\nrepresents a dimension according to which the candidates are grouped for the election, e.g., their\npolitical parties, districts, gender, or ethnicity. The set Econtains the tuples of groups receiving a\nstrictly positive number of votes, which are specified in the tensor V. The values bℓ,i, Bℓ,irepresent\na lower and upper bound on the number of seats that should be assigned to group Gℓ,i, respectively,\nandcis the size of the house. We say that a dimension ℓ∈[d] isbinding ifbℓ,i=Bℓ,ifor every\ni∈[kℓ], i.e., if there are hard bounds on the number of seats that all groups in this dimension\nshould receive.\n27\n--- Page 28 ---\nIn this section, a mapping x:E×[c]→ {0,1}(resp. [0 ,1]) is an apportionment (resp. fractional)\nifbℓ,i≤P\ne∈E:eℓ=iP\nt∈[c]x(e, t)≤Bℓ,ifor every ℓ∈[d] and i∈[kℓ],andP\ne∈EP\nt∈[c]x(e, t) =c,\nwhere the first condition ensures the group bounds and the second one guarantees to fulfill the house\nsize. As usual, we call an instance fractionally feasible if it admits a fractional apportionment. For\nan instance of MA, and given α∈Nd\n0and ∆ ∈N0, a mapping y:E×[c]→ {0,1}is an ( α,∆)-\napproximately proportional apportionment if there exist values λℓ,i>0 for every ℓ∈[d] and every\ni∈[kℓ] such that\nP\nt∈[c]x(e, t) = JVeQ\nℓ∈[d]λℓ,eℓKsfor every e∈E, (43)\nbℓ,i−αℓ≤P\ne∈E:eℓ=iP\nt∈[c]x(e, t)≤Bℓ,i+αℓfor every ℓ∈[d], i∈[kℓ], (44)\n|P\ne∈EP\nt∈[c]x(e, t)−c| ≤∆. (45)\nIn addition to approximately respecting the group bounds and the house size, we have now imposed\nthe natural notion of proportionality in this setting: Each group Gℓ,ihas an associated multiplier\nλℓ,iand each tuple is assigned a number of seats given by its number of votes scaled by all the\nmultipliers associated with groups in the tuple. The existence of multipliers such that all deviations\nare zero is guaranteed when d∈ {1,2}[Balinski and Demange, 1989a,b, Gaffke and Pukelsheim,\n2008], but not when d≥3 [Cembrano et al., 2022]. However, we exploit the fact that fractional\napportionments are guaranteed to exist and that proportionality is kept upon rounding.\nImproved guarantee for near-feasible apportionments. As a starting point for applying\nour rounding theorem, we use the following linear program, introduced by Cembrano et al. [2022]:\nminP\ne∈EP\nt∈[c]x(e, t) ln(s(t)/Ve) [LP-MA]\ns.t. bℓ,i≤P\ne∈E:eℓ=iP\nt∈[c]x(e, t)≤Bℓ,ifor every ℓ∈[d], i∈[kℓ],\nP\ne∈EP\nt∈[c]x(e, t) =c,\nx(e, t)∈[0,1] for every e∈E, t∈[c].\nUsing a primal-dual analysis, it can be shown that [LP-MA] fully characterizes proportional ap-\nportionments, in the sense that a mapping xis a proportional apportionment if and only if it is\nan optimal solution for it [Cembrano et al., 2022, Theorem 1]. While this linear program does not\nhave, in general, an optimal integral solution, we can still round an optimal solution of [LP-MA] us-\ning Theorem 1 and maintain the proportionality condition (43) to obtain improved approximation\nguarantees for near-feasible apportionments. The proof consists of a direct application of Theo-\nrem 1 for an MCRA instance with all utilities equal to 1. Note that this integer instantiation of\nthe utilities implies the terms 1 /(αℓ+ 1) from the main theorem are replaced by 1 /(αℓ+ 2), which\ntranslates into smaller deviations.\nTheorem 5. LetIbe an instance of MA. Let α∈Nd\n0be such thatP\nℓ∈[d]1/(αℓ+ 2)≤1and\n∆∈N0defined by ∆ = min {min{∆ℓ:ℓ∈[d]},⌈1/(1−P\nℓ∈[d]1/(αℓ+ 2))−2⌉}, where ∆ℓ=αℓkℓ\nfor every binding dimension ℓ∈[d]and∆ℓ= (αℓ+1)kℓ−1for every non-binding dimension. Then,\nthere exists an (α,∆)-approximate proportional apportionment for I. Furthermore, this solution\ncan be found in time polynomial in |E|andc.\nProof. LetI= (G, E, V, b, B, c ) and αbe as in the statement. We let A=E×[c] denote a set of\nagents, where each agent ( e, t)∈Awill represent the tth potential seat allocated to the tuple e.\nWe let R={r}be a unique resource and we consider ωa= 1 for every a∈A. For simplicity, we\nrepresent bundles in T=Tafor any a∈Aby a binary value q∈ {0,1}, where q= 1 represents that\n28\n--- Page 29 ---\nris allocated and q= 0 that is not.2We let x∗be an optimal solution for [LP-MA]. Clearly, the\nnatural mapping ˜ x∗capturing x∗on the domain E, given by ˜ x∗((e, t),1) = x∗(e, t), is a fractional\nresource allocation for the instance ( A,∅, R, G, ω, c ) of MCRA, where we have no binding agents\n(A′=∅) and ωa= 1 for every a∈A. Since there is only one non-empty bundle, we have A(x∗) =∅,\nso we can take ψ= 0 and, sinceP\nℓ∈[d]1/(αℓ+ 2)≤1,we can apply Theorem 1 for this instance and\nallocation, utilities ua(q) = 1 for every a∈Aandq∈ T,α+1, and ⌈1/(1−P\nℓ∈[d]1/(αℓ+ 2))−1⌉.\nThis theorem implies the existence of a rounding ˜ y:E → { 0,1}such that, when translated into y\non the domain E×[c] by setting y(e, t) =y∗((e, t),1), it satisfies\n\f\f\f\fX\ne∈E:eℓ=iX\nt∈[c](y(e, t)−x∗(e, t))\f\f\f\f< α ℓ+ 1 for every ℓ∈[d], i∈[kℓ], (46)\n\f\f\f\fX\ne∈EX\nt∈[c](y(e, t)−x∗(e, t))\f\f\f\f<\u00181\n1−P\nℓ∈[d]1\nαℓ+2−1\u0019\n. (47)\nWe claim the result for this mapping y. That this solution can be found in time polynomial\nin|E|andcfollows directly from Theorem 1 and the fact that x∗is found by solving a linear\nprogram with O(|E| ·c) variables and constraints. It remains to show that ysatisfies equality (43)\nand inequalities (44) and (45). The former follows from Cembrano et al. [2022, Lemma 5], because\nx∗is an optimal solution for [LP-MA] and yis a rounding of x∗. That ysatisfies inequality (44)\nfollows immediately from inequality (46), the fact that bℓ,i≤P\ne∈E:eℓ=iP\nt∈[c]x∗(e, t)≤Bℓ,ifor\nevery ℓ∈[d] and i∈[kℓ] since x∗is feasible for [LP-MA], and the fact thatP\ne∈E:eℓ=iP\nt∈[c]y(e, t)\nis an integer value for every ℓ∈[d] and i∈[kℓ].\nFinally, that ysatisfies inequality (45) when ∆ = ⌈1/(1−P\nℓ∈[d]1/(αℓ+ 2))−2⌉follows from\ninequality (47), the fact thatP\ne∈EP\nt∈[c]x∗(e, t) =csince x∗is feasible for [LP-MA], and the fact\nthatP\ne∈EP\nt∈[c]y(e, t) is an integer value. We next consider the case where ∆ = αℓkℓfor some\nbinding dimension ℓ∈[d], i.e., such that bℓ=Bℓ. We fix such ℓand observe that the previous\nequality impliesP\ne∈E:eℓ=iP\nt∈[c]x∗(e, t) =bℓ∈N. Thus,\n\f\f\f\fX\ne∈EX\nt∈[c]y(e, t)−c\f\f\f\f=\f\f\f\fX\ne∈EX\nt∈[c](y(e, t)−x∗(e, t))\f\f\f\f\n=\f\f\f\fX\ni∈[kℓ]X\ne∈E:Eℓ=iX\nt∈[c](y(e, t)−x∗(e, t))\f\f\f\f\n≤X\ni∈[kℓ]\f\f\f\fX\ne∈E:Eℓ=iX\nt∈[c](y(e, t)−x∗(e, t))\f\f\f\f≤X\ni∈[kℓ]αℓ=αℓkℓ,\nwhere we used the fact thatP\ne∈EP\nt∈[c]x∗(e, t) =csince x∗is feasible for [LP-MA], the trian-\ngle inequality, and inequality (46) combined with the fact that bothP\ne∈E:eℓ=iP\nt∈[c]x∗(e, t) andP\ne∈E:eℓ=iP\nt∈[c]y(e, t) are integer values. Inequality (45) follows directly. We finally consider the\ncase where ∆ = ( αℓ+ 1)kℓ−1 for some non-binding dimension ℓ∈[d], i.e., such that bℓ< B ℓ. We\nfix such ℓand observe that\f\f\f\fX\ne∈EX\nt∈[c]y(e, t)−c\f\f\f\f=\f\f\f\fX\ne∈EX\nt∈[c](y(e, t)−x∗(e, t))\f\f\f\f\n=\f\f\f\fX\ni∈[kℓ]X\ne∈E:Eℓ=iX\nt∈[c](y(e, t)−x∗(e, t))\f\f\f\f\n2That is, in our original notation q= 1 would represent the bundle q′:R→Ngiven by q′(r) = 1.\n29\n--- Page 30 ---\n≤X\ni∈[kℓ]\f\f\f\fX\ne∈E:Eℓ=iX\nt∈[c](y(e, t)−x∗(e, t))\f\f\f\f<X\ni∈[kℓ](αℓ+ 1) = ( αℓ+ 1)kℓ,\nwhere we used the fact thatP\ne∈EP\nt∈[c]x∗(e, t) =csince x∗is feasible for [LP-MA], the triangle\ninequality, and inequality (46). Since the first expression is an integer value, we conclude that it is\nbounded from above by ( αℓ+ 1)kℓ−1 and inequality (45) holds in this case as well.\nWe remark that our guarantees in Theorem 5 improve over the result by Cembrano et al. [2022]\nin that we can bound the total deviation ∆ from the house size, while the rounding algorithm by\nCembrano et al. only allows trading off the deviations on each dimension. On the one hand, we get\nsmall deviations from the house size if the sumP\nℓ∈[d]1/(αℓ+ 2) is not too close to 1; for example,\nford= 3, taking α∈ {(0,6,6),(1,2,4),(2,2,2)}allows ∆ = ⌈1/(1−P\nℓ∈[d]1/(αℓ+ 2))−2⌉= 2.\nOn the other hand, we also get slight deviations from the house size when a dimension ℓhas\nfew groups; for example, the case with kℓ= 2 (which may arise, for example, if the corresponding\ndimension is gender) yields deviations from the house size of at most 2 αℓif the dimension is binding\nand at most 2( αℓ+ 1)−1 otherwise. Note that, in particular, the existence of a binding dimension\nℓwith deviations αℓ= 0 implies exactly fulfilling the house size.\nWe finally remark that, in principle, our rounding algorithm could be further applied to more\ngeneral apportionment settings in which several representative bodies are to be elected, but this\nwould require novel structural results capturing proportionality in this general case.\n5 Discussion and Final Remarks\nOur work develops a general iterative rounding framework for resource allocation in two-sided\nmarkets that produces near-feasible allocations while controlling violations in both resource ca-\npacities and fairness targets. Fed with an appropriate fractional allocation and tuning a small\nset of deviation parameters, our approach gives a unified and flexible tool for handling fairness in\nseveral resource allocation problems, including school allocations, stable matchings, and political\napportionment. In doing so, it not only recovers guarantees from these specialized settings but\nalso provides new ones for previously omitted objectives and extends prior guarantees to cases\ninvolving multi-demand agents and overlapping, multidimensional group structures. The resulting\nnear-feasible solutions provide robust performance guarantees, even when exact feasibility is the-\noretically impossible or computationally prohibitive. Furthermore, the flexibility in choosing the\ndeviation parameters enables policy designers to tailor the trade-offs between efficiency, fairness,\nand resource augmentation to the needs of a specific application.\nRegarding practical implementations of our result, Theorem 1 allows us to bound worst-case\ndeviations and guarantee the existence of integral solutions that meet certain relaxed requirements.\nIn practice, one could still use the existential side of our result, albeit with an alternative algorith-\nmic approach, aiming to find an integral solution directly with the target maximum deviations. A\npossible shortcut for this is to directly solve the integer program obtained by relaxing the original\nconstraints, allowing the target deviations guaranteed by our sufficient condition. Another possibil-\nity, based on a simple search, is to start by allowing no deviations and then sequentially increase the\nallowed deviations; our theorem guarantees that a feasible solution will always be obtained before\nreaching the maximum deviations we establish. However, these approaches do not guarantee better\ndeviations in the worst case, and they may be computationally inefficient due to the necessary calls\nof a black-box integer programming solver, as opposed to the linear programming black-box used\nin our iterative rounding algorithm.\n30\n--- Page 31 ---\nIn Section 4.1, we propose a general multidimensional assignment model to handle general group\nfairness requirements by a convex optimization-driven approach. Using our rounding Theorem 1,\nwe get a range of flexible guarantees on the existence of near-feasible and fair solutions. In partic-\nular, we introduce a relaxed notion of group envy-freeness that can escape existing impossibilities\nto accommodate efficient and near-feasible allocations; we believe this new notion might be of\nindependent interest and deserves further study.\nThe implications in Section 4.2 of our main rounding Theorem 1 contribute to a recent line\non the computation of near-feasible allocation under stability and complex constraints. Nguyen\nand Vohra [2019] consider a stable matching problem where the hospitals classify their acceptable\nset of doctors according to types. While they model proportionality employing lower or upper\nbounds on the proportion of doctors of each type to be assigned for each hospital, our approach\nin Section 4.2 incorporates general fairness considerations as the objective function in a convex\noptimization program. Theorem 4 ensures controlled deviations that can be tailored to real-world\nconstraints, giving flexibility to policy designers in implementing stability and optimizing trade-\noffs between efficiency and fairness. We also believe our framework can be further exploited under\ndifferent stability concepts, e.g., the group-stability notion considered by Nguyen et al. [2021] to\nmatch families and localities with contracts and budget constraints.\nBeyond the application settings showcased in this work, our framework could be further explored\nin other domains, such as makespan scheduling [Feldman, Garg, Narayan, and Ponitka, 2025, Saha\nand Srinivasan, 2018] and fair algorithms for clustering [Bera, Chakrabarty, Flores, and Negahbani,\n2019, Makarychev and Vakilian, 2021].\n31\n--- Page 32 ---\nA Approximately Envy-free Allocations\nTheorem 3. LetIbe a group-homogeneous and fractionally feasible instance of assignment-\nMCRA, and let α∈Nd\n0andδ∈N0be such that\nX\nℓ∈[d]2(kℓ−1)\nαℓ+ 1+ω∗\nδ+ 1≤1\n2.\nThen, there exists an (α, δ)-approximately envy-free allocation for I.\nThis theorem follows from two main ingredients: The existence of a fractional allocation satisfy-\ning our notion of envy-freeness, and an iterative rounding procedure that starts from this allocation\nand renders an integral allocation with the claimed deviations. This second ingredient follows from\nan analogous algorithm and proof to the one used in the proof of Theorem 1, with the only differ-\nence that, in the linear program the algorithm solves in each iteration t, constraint (12) is never\nimposed (which can be achieved by simply setting χt= 0 for every t) and the group constraints\n(10) are replaced by\nX\na∈Gℓ,iX\nq∈Tuℓ,i(q)·(x(a, q) +y(a, q))≥|Gℓ,i|\n|Gℓ,j|X\nb∈Gℓ,jX\nq∈Tuℓ,i(q)·(x(b, q) +y(b, q)),\nX\nb∈Gℓ,jX\nq∈Tuℓ,j(q)·(x(b, q) +y(b, q))≥|Gℓ,j|\n|Gℓ,i|X\na∈Gℓ,iX\nq∈Tuℓ,j(q)·(x(a, q) +y(a, q)),\nfor every i∈˜Gt\nℓ(F) and every j∈[kℓ]\\ {i}, so that no envy related to group Gℓ,iis generated as\nlong as this group has αℓ+1 or more associated fractional variables. We recall that xare the integer\nvalues fixed in previous iterations and yare the variables of the linear program. This change leads\nto an increase in the number of these constraints: We still impose one constraint for each agent in\n˜Aand each resource in ˜Rt, but the number of constraints for each group in ˜Gt\nℓnow increases from\n1 to 2( kℓ−1). The condition to have more variables than equality constraints in iteration tthus\nbecomesX\nℓ∈[d]2(kℓ−1)\u0016z\nαℓ+ 1\u0017\n+\u0016ω∗z\nδ+ 1\u0017\n≤\u0018z\n2\u0019\nfor every z∈N,\nwhich is ensured if we have the conditionP\nℓ∈[d]2(kℓ−1)\nαℓ+1+ω∗\nδ+1≤1\n2from the statement.\nIn the remainder of this appendix, we thus show the missing ingredient: The existence of an\nenvy-free fractional allocation to start the iterative rounding with. This follows from a simple\ngreedy construction.\nClaim 5. For every group-homogeneous and fractionally feasible instance Iof assignment-MCRA,\nthere exists a fractional allocation x:M → [0,1]such that, for every ℓ∈[d]andi, j∈[kℓ],\nUℓ,i(x)≥|Gℓ,i|\n|Gℓ,j|X\nb∈Gℓ,jX\nq∈Tuℓ,i(q)·x(b, q).\nProof. LetI= (A, R, E, G, ω, c, u ) be a group-homogeneous and fractionally feasible instance of\nassignment-MCRA, and recall that we refer to the common utility function of each group Gℓ,ias\nuℓ,i. We can construct a fractional allocation satisfying the envy-freeness condition in the statement\nvia a natural greedy procedure, formally described in Algorithm 2. In simple terms, the greedy\n32\n--- Page 33 ---\nALGORITHM 2: Greedy algorithm for fractional envy-free allocations in assignment-MCRA\nInput: Group-homog. and fractionally feasible instance I= (A, R, E, G, ω, c, u ) of assignment-MCRA\nOutput: fractional resource allocation x\nx(a, q)←0 for every ( a, q)∈ M;\nA0←A,T0← T,t←0; // unsaturated agents and bundles\nwhile M ∩ (At× Tt)̸=∅do\nfora∈Atdo\nqt\na←arg max {ua(q) :q∈ Ta,E∩ Tt}; // favorite available bundle for a\nx(a, qt\na)←x(a, qt\na) +τ;\nifP\nq∈Ta,Ex(a, q)≥1then\nAt+τ←At\\ {a}; // agent ais saturated\nT(a)←t\nend\nend\nforq∈ Ttdo\nifP\n(a,q′)∈Mq′(r)≥c(r)for some r∈Rwithq(r)≥1then\nTt+τ← Tt\\ {q}; // bundle qis saturated\nT(q)←t\nend\nend\nt←t+τ\nend\nT(a)←tfor all a∈Afor which T(a) is undefined;\nT(q)←tfor all q∈ Tfor which T(q) is undefined;\nreturn x\nalgorithm starts from the empty allocation and assigns to each agent aat each step t, a fraction τ\nof this agent’s favorite available bundle, where available here means that no resource in the bundle\nhas been fully assigned yet. We update ttot+τand continue as long as there exists an eligible\nagent-bundle pair such that the agent has not received a full allocation and the bundle remains\navailable. We claim that the continuous limit of this algorithm, i.e., the algorithm run with τ→0,\nproduces the desired allocation.\nIt is not hard to see that the algorithm terminates: For large enough t, agents or bundles become\nsaturated. This is because, as long as an agent is not saturated, its sum of assigned bundles grows.\nThus, at t= 1 all agents that remain active must become saturated and the algorithm terminates.\nCallxthe allocation output by Algorithm 2 with τ→0. That xis a fractional allocation is\nnot hard to see: Because of the updating conditions of the sets of unsaturated agents and bundles,\nwe immediately haveP\nq∈Ta,Ex(a, q)≤1 for every a∈AandP\n(a,q)∈Mq(r)x(a, q)≤c(r) for every\nr∈R. To see the envy-freeness condition, suppose for the sake of contradiction that there exists\nℓ∈[d] and i, j∈[kℓ] such that\nX\na∈Gℓ,iX\nq∈Tuℓ,i(q)·x(a, q)<|Gℓ,i|\n|Gℓ,j|X\nb∈Gℓ,jX\nq∈Tuℓ,i(q)·x(b, q).\nRearranging and applying the definition of x, we obtain\n1\n|Gℓ,i|X\na∈Gℓ,iX\nq∈Ta,Euℓ,i(q)ZT(a)\n01qta=qdt <1\n|Gℓ,j|X\nb∈Gℓ,jX\nq∈Tb,Euℓ,i(q)ZT(b)\n01qt\nb=qdt.\nThis implies that, for some a∈Gℓ,i,b∈Gℓ,jandt∈[0, T(a)], we have uℓ,i(qt\na)< uℓ,j(qt\nb), which\ncontradicts the definition of qt\naas the available bundle that maximizes a’s utility.\n33\n--- Page 34 ---\nReferences\nS. K. A., K. Munagala, M. Nasre, G. S. Sankar, et al. Approximation algorithms for school\nassignment: Group fairness and multi-criteria optimization. arXiv preprint arXiv:2403.15623 ,\n2024.\nN. Ahani, T. Andersson, A. Martinello, A. Teytelboym, and A. C. Trapp. Placement optimization\nin refugee resettlement. Operations Research , 69(5):1468–1486, 2021.\nT. Andersson and L. Ehlers. Assigning refugees to landlords in sweden: Efficient, stable, and\nmaximum matchings. The Scandinavian Journal of Economics , 122(3):937–965, 2020.\nN. Arnosti, C. Bonet, and J. Sethuraman. Explainable affirmative action. In Proceedings of the\n25th ACM Conference on Economics and Computation , pages 310–310, 2024.\nH. Aziz and F. Brandl. Efficient, fair, and incentive-compatible healthcare rationing. In Proceedings\nof the 22nd ACM Conference on Economics and Computation , pages 103–104, 2021.\nM. Balinski and G. Demange. An axiomatic approach to proportionality between matrices. Math-\nematics of Operations Research , 14(4):700–719, 1989a.\nM. Balinski and G. Demange. Algorithms for proportional matrices in reals and integers. Mathe-\nmatical Programming , 45(1-3):193–210, 1989b.\nM. Balinski and H. P. Young. Fair representation: Meeting the ideal of one man, one vote . Brook-\nings Institution Press, 2010.\nN. Bansal. Constructive algorithms for discrepancy minimization. In Proceedings of the 51st Annual\nSymposium on Foundations of Computer Science , pages 3–10, 2010.\nN. Bansal and S. Garg. Algorithmic discrepancy beyond partial coloring. In Proceedings of the\n49th Annual ACM SIGACT Symposium on Theory of Computing , pages 914–926, 2017.\nN. Bansal, D. Dadush, and S. Garg. An algorithm for koml´ os conjecture matching banaszczyk’s\nbound. SIAM Journal on Computing , 48(2):534–553, 2019.\nN. Bansal, H. Jiang, S. Singla, and M. Sinha. Online vector balancing and geometric discrepancy.\nInProceedings of the 52nd Annual ACM SIGACT Symposium on Theory of Computing , pages\n1139–1152, 2020.\nJ. Beck and T. Fiala. Integer-making theorems. Discrete Applied Mathematics , 3(1):1–8, 1981.\nS. Bera, D. Chakrabarty, N. Flores, and M. Negahbani. Fair algorithms for clustering. Advances\nin Neural Information Processing Systems , 32, 2019.\nF. Bobbio, M. Carvalho, A. Lodi, I. Rios, and A. Torrico. Capacity planning in stable matching:\nAn application to school choice. In Proceedings of the 24th ACM Conference on Economics and\nComputation , pages 295–295, 2023.\nS. Bubeck et al. Convex optimization: Algorithms and complexity. Foundations and Trends in\nMachine Learning , 8(3-4):231–357, 2015.\nB. Bukh. An improvement of the beck–fiala theorem. Combinatorics, Probability and Computing ,\n25(3):380–398, 2016.\n34\n--- Page 35 ---\nJ. Cembrano, J. Correa, and V. Verdugo. Multidimensional political apportionment. Proceedings\nof the National Academy of Sciences , 119(15):e2109305119, 2022.\nJ. Cembrano, J. Correa, G. D´ ıaz, and V. Verdugo. Proportionality in multiple dimensions to design\nelectoral systems. arXiv preprint arXiv:2410.03304 , 2024.\nK. Chandrasekaran, Y. Faenza, C. He, and J. Sethuraman. Scarf’s algorithm on arborescence\nhypergraphs. To appear in ICALP , 2025.\nD. Delacr´ etaz, S. D. Kominers, and A. Teytelboym. Refugee resettlement. University of Oxford\nDepartment of Economics Working Paper , 2016.\nY. Faenza, C. He, and J. Sethuraman. Scarf’s algorithm and stable marriages. Mathematics of\nOperations Research , 2025.\nM. Feldman, J. Garg, V. V. Narayan, and T. Ponitka. Proportionally fair makespan approximation.\nInProceedings of the AAAI Conference on Artificial Intelligence , pages 13839–13846, 2025.\nN. Gaffke and F. Pukelsheim. Divisor methods for proportional representation systems: An opti-\nmization approach to vector and matrix apportionment problems. Mathematical Social Sciences ,\n56(2):166–184, 2008.\nD. Gale and L. S. Shapley. College admissions and the stability of marriage. The American\nMathematical Monthly , 69(1):9–15, 1962.\nG. Haeringer. Market design: auctions and matching . MIT Press, 2018.\nN. Immorlica, F. Echenique, and V. V. Vazirani. Online and Matching-based Market Design .\nCambridge University Press, 2023.\nB. Korte and J. Vygen. Combinatorial optimization , volume 1. Springer, 2011.\nL. C. Lau, R. Ravi, and M. Singh. Iterative methods in combinatorial optimization , volume 46.\nCambridge University Press, 2011.\nS. Lovett and R. Meka. Constructive discrepancy minimization by walking on the edges. SIAM\nJournal on Computing , 44(5):1573–1582, 2015.\nY. Makarychev and A. Vakilian. Approximation algorithms for socially fair clustering. In Conference\non Learning Theory , pages 3246–3264, 2021.\nC. Mathieu and V. Verdugo. Apportionment with parity constraints. Mathematical Programming ,\n203(1):135–168, 2024.\nH. Moulin. Fair division and collective welfare . MIT press, 2004.\nH. Nguyen, T. Nguyen, and A. Teytelboym. Stability in matching markets with complex constraints.\nManagement Science , 67(12):7438–7454, 2021.\nT. Nguyen and R. Vohra. Near-feasible stable matchings with couples. American Economic Review ,\n108(11):3154–69, 2018.\nT. Nguyen and R. Vohra. Stable matching with proportionality constraints. Operations Research ,\n67(6):1503–1519, 2019.\n35\n--- Page 36 ---\nP. A. Pathak, T. S¨ onmez, M. U. ¨Unver, and M. B. Yenmez. Fair allocation of vaccines, ventilators\nand antiviral treatments: leaving no ethical value behind in health care rationing. In Proceedings\nof the 22nd ACM Conference on Economics and Computation , pages 785–786, 2021.\nA. Procaccia, I. Robinson, and J. Tucker-Foltz. School redistricting: Wiping unfairness off the\nmap. In Proceedings of the 2024 Annual ACM-SIAM Symposium on Discrete Algorithms , pages\n2704–2724, 2024.\nF. Pukelsheim. Proportional Representation . Springer International Publishing, 2017.\nA. E. Roth. Marketplaces, markets, and market design. American Economic Review , 108(7):\n1609–1658, 2018.\nT. Rothvoss. Constructive discrepancy minimization for convex sets. SIAM Journal on Computing ,\n46(1):224–234, 2017.\nB. Saha and A. Srinivasan. A new approximation technique for resource-allocation problems.\nRandom Structures & Algorithms , 52(4):680–715, 2018.\nH. P. Young. Equity: in theory and practice . Princeton University Press, 2020.\n36",
  "text_length": 101817
}