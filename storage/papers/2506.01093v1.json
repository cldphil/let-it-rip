{
  "id": "http://arxiv.org/abs/2506.01093v1",
  "title": "Regulatory Graphs and GenAI for Real-Time Transaction Monitoring and\n  Compliance Explanation in Banking",
  "summary": "This paper presents a real-time transaction monitoring framework that\nintegrates graph-based modeling, narrative field embedding, and generative\nexplanation to support automated financial compliance. The system constructs\ndynamic transaction graphs, extracts structural and contextual features, and\nclassifies suspicious behavior using a graph neural network. A\nretrieval-augmented generation module generates natural language explanations\naligned with regulatory clauses for each flagged transaction. Experiments\nconducted on a simulated stream of financial data show that the proposed method\nachieves superior results, with 98.2% F1-score, 97.8% precision, and 97.0%\nrecall. Expert evaluation further confirms the quality and interpretability of\ngenerated justifications. The findings demonstrate the potential of combining\ngraph intelligence and generative models to support explainable, audit-ready\ncompliance in high-risk financial environments.",
  "authors": [
    "Kunal Khanvilkar",
    "Kranthi Kommuru"
  ],
  "published": "2025-06-01T17:34:57Z",
  "updated": "2025-06-01T17:34:57Z",
  "categories": [
    "cs.AI",
    "cs.CE",
    "cs.LG"
  ],
  "pdf_url": "http://arxiv.org/pdf/2506.01093v1",
  "full_text": "--- Page 1 ---\narXiv:2506.01093v1  [cs.AI]  1 Jun 2025Regulatory Graphs and GenAI for Real-Time\nTransaction Monitoring and Compliance\nExplanation in Banking\nKunal Khanvilkar\nkhanvilkar.s.kunal@ieee.org\nAtlanta, USAKranthi Kommuru\nkranthi.kommuru@ieee.org\nPasadena, USA\nAbstract —This paper presents a real-time transaction mon-\nitoring framework that integrates graph-based modeling, nar-\nrative field embedding, and generative explanation to support\nautomated financial compliance. The system constructs dynamic\ntransaction graphs, extracts structural and contextual features,\nand classifies suspicious behavior using a graph neural network.\nA retrieval-augmented generation module generates natural-\nlanguage explanations aligned with regulatory clauses for each\nflagged transaction. Experiments conducted on a simulated\nstream of financial data show that the proposed method achieves\nsuperior results, with 98.2% F1-score, 97.8% precision, and\n97.0% recall. Expert evaluation further confirms the quality\nand interpretability of generated justifications. The findings\ndemonstrate the potential of combining graph intelligence and\ngenerative models to support explainable, audit-ready compliance\nin high-risk financial environments.\nIndex Terms —graph neural networks, compliance monitoring,\ngenerative AI, transaction analysis, financial crime detection,\nexplainable AI\nI. I NTRODUCTION\nGraph-based analytics have become essential in financial\ncrime detection due to their ability to represent relationships\nbetween clients, transactions, and geographic entities [1].\nTraditional models used rule-based systems and statistical\nfilters that often failed to capture cross-entity dependencies\nor indirect associations [2]. The introduction of graph neural\nnetworks allowed for message passing between nodes, en-\nabling the identification of complex structures such as loops,\nhigh-frequency hubs, and fragmented laundering networks\n[3]. Despite these improvements, many graph models remain\nlimited to static datasets and do not account for the temporal\ndynamics or context sensitivity required for real-time financial\nmonitoring [4].\nParallel to this, generative language models have shown\nstrong results in legal summarization, policy question answer-\ning, and regulatory text classification [5]. These models are\ntrained on large corpora and can interpret intricate language\npatterns found in compliance frameworks [6]. Techniques such\nas retrieval-augmented generation have enabled the grounding\nof model responses in external policy documents [7]. In\nfinancial services, these models are used in scenarios such\nas drafting audit notes or reviewing customer due diligencesummaries [8]. Such as, their integration into transaction\nmonitoring workflows is still emerging, especially where con-\ntextual decisions must reflect both data structure and domain-\nspecific regulations [9]. Financial institutions face increasing\ndifficulty in monitoring transactions for regulatory compliance\ndue to the growing complexity of financial networks and\nthe dynamic nature of anti-money laundering (AML) rules\n[10]. Traditional approaches either use rule-based systems with\nlimited adaptability or graph-based models that lack access to\nregulatory context [11]. Like as, generative AI systems trained\non legal documents offer textual understanding but do not\noperate on real-time transactional graphs [12]. As a result,\nthese tools often fail to produce reliable alerts with clear legal\njustifications, which are essential during audits or enforcement\nreviews [13]. The possible solution lies in building a system\nthat combines real-time graph analysis with natural language\nprocessing to detect compliance breaches and explain them\nusing regulatory language [14]. But, current solutions lack\nmulti-modal integration, alignment with legal frameworks, and\nsupport for real-time explanation generation [15].\nThis paper aims to address these gaps by designing a frame-\nwork that integrates transactional graphs, narrative metadata,\nand regulatory text, with the goal of improving both detection\naccuracy and explanation quality.\n1) How can graph-based representations and narrative\ntransaction fields be combined to identify regulatory\ncompliance violations in real time?\n2) In what ways can generative AI be used to produce\nhuman-readable explanations that are traceable to spe-\ncific regulatory clauses?\n3) What is the impact of multi-modal integration on the\nprecision, recall, and interpretability of compliance mon-\nitoring systems?\nFinancial crime detection remains a critical challenge for\ninstitutions operating in regulated environments, particularly as\ncriminals exploit complex transaction paths and cross-border\nnetworks. Existing systems offer either structural modeling or\nregulatory analysis, but rarely both. This limits their ability\nto provide actionable, audit-ready insights. The integration of\ngraph-based modeling with regulatory text interpretation can\nimprove compliance outcomes by aligning alerts with legal\nexpectations. This alignment is essential not only for internal\n--- Page 2 ---\ndecision-making but also for demonstrating due diligence\nduring external audits and regulatory reviews.\nThis research study contributes to the development of sys-\ntems that go beyond prediction by introducing interpretability\ngrounded in legal frameworks. By fusing transaction topology\nwith narrative context and aligning outputs with domain-\nspecific rules, the proposed approach supports transparent\ncompliance decisions. This is especially valuable in high-risk\nenvironments, where explainability and traceability are central\nto regulatory acceptance. The findings may also inform the\ndesign of future monitoring systems across financial sectors,\nparticularly those adopting AI in governance and audit opera-\ntions.\nThe remainder of this paper is organized as follows. Section\nII discusses related work on graph-based compliance systems\nand generative AI in finance. Section III outlines the pro-\nposed methodology, including graph construction, narrative\nprocessing, and explanation generation. Section IV presents\nthe experimental setup and evaluation metrics. Section V\ndiscusses results and observations, followed by the conclusion\nin Section VI.\nII. L ITERATURE REVIEW\nBlanu ˇsa et al. [16] proposed a subgraph-based feature\ngeneration system for transaction monitoring. Their method\nsupported real-time graph mining and improved F1 scores\nfor minority class detection. The system achieved 3.1× faster\npattern generation than standard GNN models by exploit-\ning a dynamic in-memory graph and multicore parallelism.\nTheir pipeline enabled efficient detection of known laundering\npatterns like smurfing, cycles, and pump-and-dump schemes.\nThese subgraph patterns were transformed into enriched fea-\ntures used in gradient-boosting classifiers, which consistently\noutperformed GNNs on minority-class detection. Cardoso,\nSaleiro, and Bizarro [17] introduced a bipartite GNN trained\nwith self-supervised learning to enhance suspicious transac-\ntion classification. Their model improved latent representation\nlearning via contrastive objectives and yielded 7–11% higher\naverage precision on benchmark AML datasets. Ouyang et al.\n[18] applied subgraph contrastive learning to cryptocurrency\ntransaction graphs. They designed a heterogeneous encoder to\ncapture transaction and wallet dependencies, achieving a 5.2%\nMicro F1 gain and enabling effective detection of laundering\nclusters across variable transaction structures.\nBhattacharyya et al. [19] focused on ensuring compliance\nof GenAI models using SR11-7 validation frameworks. Their\napproach addressed challenges like hallucination, lack of\nexplainability, and validation gaps. They proposed a model\nrisk management structure that included conceptual soundness,\noutcome analysis, and ongoing monitoring aligned with SR11-\n7. The paper introduced evaluation protocols such as halluci-\nnation detection using natural language inference and toxicity\nscoring for generated outputs. Their framework emphasized\nexplainability testing and fairness audits for LLMs in com-\npliance tasks. Kothandapani [6] explored how LLMs could\nconvert regulatory text such as GDPR into decision logic forcompliance. He proposed methods for text-to-code translation\nthat enable real-time monitoring of financial transactions,\nmapping policies to structured filters, and automating updates\nacross jurisdictions. His study offered a practical view on using\nGenAI for aligning institutional logic with dynamic regulatory\ntexts.\nMill et al., [20] highlighted the urgent need for justifiable\nfraud detection under modern EU mandates. They proposed an\nXAI research agenda with focus on explainability for financial\nalerts. Their framework included priorities like transparency\nin anomaly detection and legal defensibility of fraud flags.\nThe paper also discussed challenges in evaluating explanation\nquality, suggesting human-in-the-loop assessments. Ahmadi\n[21] demonstrated the use of SHAP and interpretable ML to\nincrease clarity in detection systems by 40%. His experiments\nshowed that explanation-based models facilitated faster res-\nolution by analysts and improved trust in automated alerts.\nAdekunle et al. [22] built a monitoring interface with real-time\nKPIs that reduced audit delays by 48% and improved compli-\nance reporting accuracy. Their dashboard design enabled on-\ngoing visibility into financial operations and integrated model\noutputs with internal control metrics, streamlining regulatory\ninspections.\nAziz and Andriansyah [23] conducted a comprehensive\nreview of AI systems used in AML, fraud monitoring, and risk\nscoring. Their study categorized AI techniques and outlined\ntheir relevance across regulatory use cases such as KYC and\nSTR filing. However, the study lacked empirical implementa-\ntion of the models discussed, limiting evidence of effectiveness\nin practice. Azaad et al. [24] addressed GNN-based AML\nmonitoring on public ledgers. Their work reported 68% recall\nand 71% precision in detecting illicit clusters using blockchain\ngraphs. The authors constructed heterogeneous graph represen-\ntations from transaction histories and used node classification\ntechniques to identify laundering typologies. Their findings\nshowed that decentralized data, when combined with graph\nlearning, could support scalable AML detection without access\nto sensitive customer details. The approach demonstrated\nfeasibility for regulators and analytics firms working with open\nfinancial systems.\nSahoo and Dutta [25] explored a wide range of GenAI\napplications in finance, including anomaly detection and data\nsynthesis. Their work demonstrated potential but lacked ex-\nperimental benchmarking or reproducible metrics. The authors\nreviewed deep generative models such as V AEs, GANs, and\nautoregressive transformers, describing their utility in financial\nforecasting, synthetic data creation, and personalized invest-\nment modeling. They emphasized how these models could\nenable scenario planning and automate regulatory reporting.\nDespite these theoretical advantages, the paper acknowledged\nthe absence of standard evaluation criteria and called for\ngreater empirical validation. They also noted risks such as\nembedded bias, opacity in model outcomes, and susceptibility\nto misuse in financial operations, suggesting that governance\nand audit mechanisms must accompany GenAI deployment\n--- Page 3 ---\nTABLE I\nSUMMARY OF RELATED WORK ON GRAPH -BASED AND GENAI A PPROACHES IN FINANCIAL COMPLIANCE\nAuthor(s) Dataset Used Methodology Limitation Evaluation Results\nBlanu ˇsa et al.\n[16]Simulated AML and phish-\ning transaction graphsReal-time graph feature\nextraction, subgraph pattern\nmining, gradient-boosting\nmodelsNo deep model\ninterpretability; limited\nto specific transaction graph\ntypesF1 Score: 0.86 for minority\nclass; 3.1x faster feature ex-\ntraction than GNN baselines\non V100 GPU\nCardoso, Saleiro\nand Bizarro [17]Proprietary customer-\ntransaction datasets from\nEuropean bankSelf-supervised GNNs\non bipartite customer-\ntransaction graphsRequires domain-specific\nheuristics for initial graph\nconstructionOutperformed supervised\nbaselines by 7–11% on\naverage precision across\nmultiple evaluation folds\nOuyang et al.\n[18]Elliptic dataset and Bitcoin\ntransaction graphsSubgraph contrastive\nlearning on heterogeneous\naddress-transaction graphsNoise sensitivity and sub-\ngraph generation complex-\nityAchieved 5.2% higher Mi-\ncro F1 Score and 4.6% bet-\nter Macro F1 compared to\nbaseline GNNs\nBhattacharyya et\nal. [19]Conceptual framework – no\ndataset appliedSR11-7 aligned risk valida-\ntion for GenAI: explainabil-\nity, hallucination detection,\ntoxicity checksHigh cost of human evalu-\nation; complex operational-\nizationNo numerical results; quali-\ntative validation framework\nfor hallucination, bias, ex-\nplainability\nKothandapani [6] Regulatory policy texts\n(e.g., Basel III, GDPR)LLMs for real-time trans-\naction parsing, text-to-rule\ntransformationChallenges in model inte-\ngration with legacy systemsQualitative improvement in\ncompliance task automation\nand LLM-driven alert re-\nsponse times\nMill et al. [20] Theoretical fraud detection\nagenda – no data usedSurvey of explainable fraud\ndetection frameworks post-\nPSD2No practical models; con-\nceptual discussionConceptual framework\nonly; no models or\nperformance benchmarks\nimplemented\nSina Ahmadi\n[21]Industry reports; interview-\nbased fraud case studiesXAI for real-time fraud ex-\nplanation, decision-tree and\nSHAP useLacks benchmarks or em-\npirical modelsXAI model improved case\nresolution time by ∼40% in\nrisk reviews (bank-internal\nmetrics)\nAdekunle et al.\n[22]Prototyped KPI dashboard\nwith internal data (non-\npublic)Real-time KPI tracking\ndashboard; compliance\nmetric visualizationPrototype stage; lacks in-\ntegration with transactional\nsystemsAudit readiness improved\nby 60%; compliance metric\ndashboards reduced report\nlatency by 48%\nAziz and Andri-\nansyah [23]Multi-source review includ-\ning ML-based KYC/AML\nsystemsComprehensive review\nof ML/AI for fraud and\nKYC/AML complianceNo implementation or em-\npirical testingSummarized toolsets and\nmethods; no performance\nevaluation or comparative\nresults\nAzaad et al. [24] Public Ethereum and Bit-\ncoin blockchain dataGNNs and graph mining on\naddress clustering, transac-\ntion featuresScalability issues in large-\nvolume blockchain analysisDetected AML-linked clus-\nters with 68% recall, 71%\nprecision; stress-tested on\n1.5M transactions\nSahoo and Dutta.\n[25]Framework discussion – no\ndirect data implementationExploration of GenAI in\nfinancial modeling, risk,\ncredit scoring, NLPNo case-specific validation\nor models testedConceptual use-case map-\nping; no empirical results\nor quantitative benchmarks\navailable\nIII. P ROPOSED METHODOLOGY\nThis section outlines the architecture used to model real-\ntime compliance monitoring by intgrating graph structure, nar-\nrative fields, and regulatory documents into a unified system.\nThe pipeline is composed of five core modules: (i) transaction\ngraph construction, (ii) narrative text processing, (iii) multi-\nmodal feature fusion, (iv) classification of suspicious behavior,\nand (v) retrieval-augmented explanation aligned with regu-\nlatory text. The system is evaluated on the Elliptic dataset,\nsimulating real-time Bitcoin transaction flows. Narrative de-\nscriptions are synthetically generated to simulate memo fields,\nand all processing is executed using Python-based modules on\nGoogle Colab with GPU support. Fig. 1 illustrates the end-\nto-end architecture of the proposed compliance monitoring\nsystem. The process begins with incoming financial transac-\ntions, which are bifurcated into two distinct input streams:\nstructural data used for graph construction, and narrative fields(e.g., transaction memos) used for semantic embedding. Graph\nconstruction forms a directed transaction graph connecting\naddress entities, while narrative fields are encoded using a pre-\ntrained DistilBERT model to capture domain-relevant textual\nsignals. These two feature sets are fused into a unified vector\nrepresentation and passed into a multi-layer graph neural\nnetwork (GNN) for classification. Transactions flagged as\nsuspicious are then used to query a FAISS-based index of reg-\nulatory clauses, and a retrieval-augmented generation (RAG)\nmechanism prompts GPT-4 to generate a natural-language\nexplanation. This output includes both the compliance flag and\nits justification, ensuring traceability to underlying financial\nregulations. The architecture balances detection accuracy with\ninterpretability, making it suitable for real-time audit scenarios\nin high-risk environments.\n--- Page 4 ---\nFig. 1. System architecture showing graph construction, narrative embedding,\nclassification, and explanation generation pipeline. Transactions are parsed\ninto structural and textual inputs. Graph topology is processed via GNNs,\nwhile memos are embedded using DistilBERT. Features are fused and clas-\nsified, with flagged outputs linked to regulatory clauses and explained using\nGPT-4.\nA. Graph Construction from Transaction Data\nLet the transaction network at time tbe denoted as a\ndirected graph:\nGt= (Vt, Et) (1)\nwhere Vtis the set of entities (addresses or wallets) and Et⊆\nVt×Vtis the set of directed edges encoding transaction events.\nEach edge et\nij∈Etrepresents a transaction from node vito\nvj, associated with amount aij, timestamp τij, and a narrative\nfieldyij.\nThe complete transaction tuple is defined as:\nTt\nij= (vi, vj, aij, τij, yij) (2)\nA temporal decay function is applied to model the influence\nof transaction age:\nδij= exp( −α(τt−τij)) (3)\nwhere αis a time decay constant, and τtis the current system\ntime.\nB. Node Features and Structural Encoding\nEach node vi∈Vtis initialized with a vector of topological\nfeatures:\nxi= [din\ni, dout\ni,beti,freqi] (4)\nwhere din\nianddout\niare in-degree and out-degree, bet iis\nbetweenness centrality, and freqiis transaction frequency.\nThese features are encoded using a linear transformation:\nzi=Wsxi+bs (5)\nwhere Ws∈Rd′×dandbs∈Rd′are learnable weights.C. Narrative Field Embedding\nEach narrative field yijis passed through a transformer\nencoder such as DistilBERT:\neij=BERT (yij) (6)\nThe embedding is normalized as:\nˆeij=eij\n∥eij∥(7)\nD. Feature Fusion\nWe fuse the node feature vector ziwith the narrative\nembedding ˆeijto obtain a combined feature:\nfij=σ(Wf[zi∥ˆeij] +bf) (8)\nwhere σis a ReLU activation, and ∥denotes vector concate-\nnation.\nE. GNN-Based Classification\nTo detect compliance violations, a GCN is applied using\nfused features:\nh(l+1)\ni =σ\nX\nj∈N(i)1p\ndidjW(l)fij\n (9)\nAfter Llayers, the classifier computes:\nˆyij=sigmoid (w⊤\nch(L)\ni+bc) (10)\nThe loss function is:\nL=−yijlog ˆyij−(1−yij) log(1 −ˆyij) (11)\nF . Retrieval-Augmented Explanation\nFor each flagged transaction where ˆyij> θ, we retrieve\nrelevant regulatory clauses. Each regulation rk∈Ris encoded\nusing a transformer:\nsk=Enc(rk) (12)\nThe top- krelevant clauses are retrieved using FAISS:\nRij=topk(cos(fij, sk)) (13)\nThe explanation is generated using a language model:\ngij=G(fij,Rij) (14)\nG. System Integration\nAll modules are implemented as a sequential pipeline.\nTransactions are processed in time order, with graph updates,\nnarrative embedding, classification, regulatory retrieval, and\nexplanation handled in real time. The environment is built\nusing PyTorch Geometric, HuggingFace Transformers, and\nOpenAI’s GPT-4 API, deployed on Google Colab with A100\nGPUs.\nThis algorithm 19 simulates real-time financial transac-\ntion monitoring using a dynamic graph updated with each\nnew transaction. It fuses graph-based structural features and\nnarrative embeddings to classify transactions using a graph\nneural network. When a transaction is flagged, it retrieves\n--- Page 5 ---\nAlgorithm 1 Real-Time Compliance Monitoring with Graph\nand GenAI\nRequire: Transaction stream T={T1, T2, . . . , T n}\nRequire: Regulatory corpus R={r1, r2, . . . , r m}\nRequire: Classification threshold θ\nEnsure: Flags and natural-language explanations gifor sus-\npicious transactions\n1:Initialize dynamic graph G= (V, E)\n2:Encode each rk∈Rusing a transformer model to form\nregulatory vectors S={s1, . . . , s m}\n3:Load pre-trained DistilBERT model\n4:Load graph neural network model with weights θGNN\n5:foreach transaction TiinTdo\n6: Extract sender, receiver, amount, timestamp, and narra-\ntive from Ti\n7: Update graph Gwith new nodes and edge (vs→vr)\n8: Compute structural feature vector xifor node vs\n9: Encode narrative yiusing BERT: ei=BERT (yi)\n10: Normalize: ˆei=ei\n∥ei∥\n11: Fuse features: fi=σ(Wf[xi∥ˆei] +bf)\n12: Apply GNN to compute hidden states hi\n13: Predict label: ˆyi=sigmoid (w⊤hi+b)\n14: ifˆyi> θ then\n15: Retrieve top- krelevant rules: Ri=topk(cos(fi, sk))\n16: Generate explanation: gi=G(fi,Ri)\n17: Output alert with transaction Ti, score ˆyi, and expla-\nnation gi\n18: end if\n19:end for\nthe most relevant regulatory clauses and generates a natural-\nlanguage explanation using a generative model. This enables\nboth automated detection and human-readable compliance\njustification. We used the publicly released Elliptic AML\ndataset, which provides labeled Bitcoin transactions for anti-\nmoney laundering tasks.\nTable II provides a summary of the Elliptic dataset used for\nexperimentation. The dataset includes over 200,000 address\nnodes and more than 230,000 transaction edges, with approx-\nimately 119,000 transactions labeled as licit or illicit. Roughly\n21% of the labeled data is marked as illicit, making it a\nsuitable benchmark for financial crime detection. The inclusion\nof 166 numerical features per node supports rich structural and\nbehavioral representation, enabling the integration of graph\nand contextual information in the proposed model.\nIV. E XPERIMENT SETTING\nThe evaluation was conducted using the Elliptic AML\ndataset, a large-scale collection of real-world Bitcoin transac-\ntions annotated as licit or illicit. To simulate a real-time com-\npliance environment, transactions were temporally sorted and\ningested as a dynamic stream. Each transaction was modeled\nas a directed edge between two address nodes, forming a tem-\nporally evolving graph. Structural features—such as in/out de-TABLE II\nCOMPREHENSIVE SUMMARY OF THE ELLIPTIC AML D ATASET\nStatistic / Description Value\nTotal Number of Address\nNodes (Entities)203,769\nTotal Number of Transac-\ntion Edges234,355\nNumber of Labeled Trans-\nactions119,341\nIllicit Label Proportion 21%\nLicit Label Proportion 79%\nGraph Type Directed, Temporal, Weighted\nFeature Vector Dimension\nper Node166\nFeature Types Transaction behavior, aggregated statistics,\nand time-series indicators\nLabel Categories Illicit, Licit, Unknown (semi-supervised)\nTemporal Coverage 49 time steps (representing days/weeks)\nAverage Degree per Node Approx. 2.3\nIsolated Nodes None (connected graph)\nDataset Purpose Anti-Money Laundering (AML) classifica-\ntion and temporal graph learning\nData Source Elliptic Ltd., Blockchain AML Research\nDataset\nAccess Link https://www.kaggle.com/datasets/ellipticco/\nelliptic-data-set\ngree, betweenness centrality, and transaction frequency—were\nextracted per node to capture behavioral signals indicative\nof financial anomalies. To emulate human-facing financial\nmetadata, each transaction was paired with a synthetically\ngenerated narrative field designed to mirror memo descriptions\ntypically found in wire transfers and audit logs. These texts\nwere encoded into dense vector representations using a fine-\ntuned DistilBERT model, enabling context-aware embedding\naligned with financial semantics.\nThe model was implemented using PyTorch Geometric\nand executed in Google Colab with Pro+ GPU accelera-\ntion. A three-layer graph convolutional network (GCN) was\nconstructed for node-level classification, where each node\naggregated information from both structural topology and\nits corresponding narrative embedding. The combined repre-\nsentation enabled multi-modal learning across heterogeneous\ntransaction cues. For all transactions classified as suspicious,\na retrieval module indexed a curated set of AML regulations\nusing FAISS, returning the most relevant compliance clauses.\nThese retrieved clauses, along with transaction context, were\npassed to GPT-4 via the OpenAI API to generate a natural-\nlanguage explanation. The full pipeline was executed in a\nstep-wise loop, with each batch representing a real-time slice\nof transaction activity. The dataset was divided into 80%\ntraining and 20% testing, maintaining chronological order to\npreserve the temporal integrity of the stream. Due to this time-\ndependent nature, no cross-validation was applied.\nV. R ESULTS AND ANALYSIS\nThis section presents the results of our experiments based\non detection performance and explanation quality. Metrics\nare computed on the simulated transaction stream using the\nElliptic dataset. Graph-based classification is evaluated using\n--- Page 6 ---\nFig. 2. F1-score comparison across models. Our proposed method achieved\nthe highest score (98.2%) by combining structural and narrative features.\nstandard metrics including precision, recall, and F1-score.\nIn addition, we assess the generated explanations on clarity,\nregulatory alignment, and interpretability using expert-labeled\nreview.\nTABLE III\nPERFORMANCE METRICS COMPARISON WITH EXISTING METHODS\nReference F1-score Precision Recall/AP\n[17] 95.22% (AP) – 94.83% (AUC)\n[21] 91.3% 90.6% 93.1%\n[18] 81.5% 82.5% 76.0%\n[24] – 71.0% 68.0%\n[16] 64.77% 28.25% 22.64%\n[22] – – – (48% audit delay reduction)\nProposed 98.2% 97.8% 97.0%\nTable III highlights the superior performance of our pro-\nposed method across all key metrics. It outperforms exist-\ning models in F1-score, precision, and recall, demonstrating\nenhanced accuracy and reliability in real-time compliance\ndetection.\nFig. 2 presents a horizontal comparison of F1-scores\nachieved by our proposed model and five baseline methods\nselected from the literature. Our model achieved the highest\nF1-score of 98.2%, surpassing LaundroGraph by Cardoso et\nal. [17], which recorded 95.22%, and the interpretable ML\nsystem by Ahmadi [21], which achieved 91.3%. Other models\nsuch as those by Ouyang et al. [18] and Blanu ˇsa et al. [16]\nshowed notably lower performance. The results validate the\nbenefit of fusing structural graph features with narrative fields,\nwhich allowed our model to better distinguish between licit\nand illicit transaction behavior in real-time detection scenarios.\nFig. 3 compares the classification accuracy of our proposed\nmethod against existing systems. Our model achieved an accu-\nracy of 97.5%, which outperformed the graph-based Laundro-\nGraph model by Cardoso et al. [17] at 94.1%, and the SHAP-\nbased interpretable model by Ahmadi [21] at 90.2%. Models\nsuch as those by Ouyang et al. [18] and Azaad et al. [24]\nperformed less reliably, with accuracy scores below 80%.\nThis highlights the robustness of our approach in maintaining\nhigh prediction reliability across varied transaction scenarios,\nFig. 3. Classification accuracy comparison across models\nespecially when combining temporal graph structures with\ncontextual text features.\nFig. 4 compares model performance using different input\nfeature sets. The best results were achieved when graph\nand narrative features were combined, confirming the value\nof multi-modal integration in compliance detection. Fig. 5\nFig. 4. Precision, Recall, and F1-score across different feature combinations.\nThe best results were achieved using both graph topology and narrative fields.\ncompares precision and recall scores across six baseline\nmodels and our proposed method. Our system achieved the\nhighest precision (97.8%) and recall (97.0%), outperforming\nLaundroGraph [17] and Ahmadi’s interpretable model [21].\nThis balance confirms the model’s reliability in identifying\ntrue violations while minimizing false positives in transaction\nmonitoring.\nFig. 6 shows expert ratings on explanation quality. The\nmodel performed best in regulatory alignment (4.8), con-\nfirming its ability to generate legally grounded justifications.\nClarity and completeness scores further support the output’s\nreliability.\nTo illustrate how the model detects suspicious behavior, we\nvisualized subgraph patterns using Graphviz. Fig. 7 shows a\ncase where rapid fund movement through high-degree nodes\nleads to a compliance flag. This structural behavior, when\n--- Page 7 ---\nFig. 5. Precision and recall across models.\nFig. 6. Expert evaluation of explanation quality. Regulatory alignment scored\nhighest among clarity and completeness.\nfused with the narrative “Urgent invoice for unverified offshore\naccount,” resulted in an illicit classification.\nVI. C ONCLUSION\nThis paper presented a real-time transaction monitoring\nframework that combines graph-based modeling, narrative\nfield embeddings, and generative explanation to support fi-\nnancial compliance tasks. The proposed system achieved high\nperformance, with 98.2% F1-score, 97.8% precision, and\n97.0% recall, demonstrating its effectiveness in identifying\nsuspicious activity within streaming transactions. By fusing\nstructural features and contextual narratives, the model not\nonly improved classification accuracy but also generated clear,\nregulation-aligned explanations. Expert evaluations confirmed\nthe quality of these outputs, and subgraph visualizations il-\nlustrated how high-risk flows are detected. One limitation of\nthis study is the reliance on synthetically generated narrative\nfields, which may not fully capture real-world variability.\nAdditionally, the retrieval-augmented generation module can\noccasionally produce inconsistent justifications when input\nembeddings vary marginally. Future work should address ro-\nbustness under natural narrative noise, expand to multilingual\nrule sets, and integrate with live payment systems to further\nenhance compliance automation.\nFig. 7. Graphviz visualization of a flagged subgraph. Nodes represent\naddresses; red edges indicate illicit transaction paths identified by the GNN.\nREFERENCES\n[1] A. S. Chandrasekaran, “Harnessing the power of generative artificial\nintelligence (genai) in governance, risk management, and compliance\n(grc),” 2024.\n[2] H. Hettiarachchi, Text embedding-based event detection for social and\nnews media . PhD thesis, Birmingham City University, 2023.\n[3] F. Johannessen and M. Jullum, “Finding money launderers using het-\nerogeneous graph neural networks,” arXiv preprint arXiv:2307.13499 ,\n2023.\n[4] S. K. R. Malikireddy, B. Algubelli, and S. Tadanki, “Knowledge graph-\ndriven real-time data engineering for context-aware machine learning\npipelines,” European Journal of Advances in Engineering and Technol-\nogy, vol. 8, no. 5, pp. 65–76, 2021.\n[5] A. Deroy, K. Ghosh, and S. Ghosh, “Applicability of large language\nmodels and generative models for legal case judgement summarization,”\nArtificial Intelligence and Law , pp. 1–44, 2024.\n[6] H. P. Kothandapani, “Ai-driven regulatory compliance: Transforming\nfinancial oversight through large language models and automation,”\nEmerging Science Research , pp. 12–24, 2025.\n[7] T. Pujari, A. K. Pakina, and A. Goel, “Explainable ai and gover-\nnance: Enhancing transparency and policy frameworks through retrieval-\naugmented generation (rag),” 2023.\n[8] T. Kastrup, M. Grant, and F. Nilsson, “Practical and theoretical judg-\nment in data-driven financial due diligence,” Accounting, Auditing &\nAccountability Journal , vol. 38, no. 3, pp. 879–907, 2025.\n[9] P. P. Ray, “A survey on model context protocol: Architecture, state-of-\nthe-art, challenges and future directions,” Authorea Preprints , 2025.\n[10] I. Zavoli and C. King, “The challenges of implementing anti-money\nlaundering regulation: an empirical analysis,” The Modern Law Review ,\nvol. 84, no. 4, pp. 740–771, 2021.\n[11] A. P. G ´omez, “Rule-based expert systems for automated legal reasoning\nand contract analysis: A case study in knowledge representation,”\nAdvances in Computational Systems, Algorithms, and Emerging Tech-\nnologies , vol. 7, no. 1, pp. 19–34, 2022.\n[12] A. Mongoli, The Use of LLMs in the Legal Field: Optimizing Con-\ntract Management with Generative Artificial Intelligence. PhD thesis,\nPolitecnico di Torino, 2024.\n[13] B. Hutchinson, S. Dekker, and A. Rae, “How audits fail according to\naccident investigations: A counterfactual logic analysis,” Process Safety\nProgress , vol. 43, no. 3, pp. 441–454, 2024.\n[14] A. K. Kalusivalingam, A. Sharma, N. Patel, and V . Singh, “Enhancing\ncorporate governance and compliance through ai: Implementing natural\n--- Page 8 ---\nlanguage processing and machine learning algorithms,” International\nJournal of AI and ML , vol. 3, no. 9, 2022.\n[15] S. Sun, W. An, F. Tian, F. Nan, Q. Liu, J. Liu, N. Shah, and P. Chen,\n“A review of multimodal explainable artificial intelligence: Past, present\nand future,” arXiv preprint arXiv:2412.14056 , 2024.\n[16] J. Blanu ˇsa, M. Cravero Baraja, A. Anghel, L. V on Niederh ¨ausern,\nE. Altman, H. Pozidis, and K. Atasu, “Graph feature preprocessor: Real-\ntime subgraph-based feature extraction for financial crime detection,” in\nProceedings of the 5th ACM International Conference on AI in Finance ,\npp. 222–230, 2024.\n[17] M. Cardoso, P. Saleiro, and P. Bizarro, “Laundrograph: Self-supervised\ngraph representation learning for anti-money laundering,” in Proceedings\nof the third ACM international conference on AI in finance , pp. 130–138,\n2022.\n[18] S. Ouyang, Q. Bai, H. Feng, and B. Hu, “Bitcoin money laundering\ndetection via subgraph contrastive learning,” Entropy , vol. 26, no. 3,\np. 211, 2024.\n[19] A. Bhattacharyya, Y . Yu, H. Yang, R. Singh, T. Joshi, J. Chen, and\nK. Yalavarthy, “Model risk management for generative ai in financial\ninstitutions,” arXiv preprint arXiv:2503.15668 , 2025.\n[20] E. R. Mill, W. Garn, N. F. Ryman-Tubb, and C. Turner, “Opportunities\nin real time fraud detection: An explainable artificial intelligence (xai)\nresearch agenda,” International Journal of Advanced Computer Science\nand Applications , vol. 14, no. 5, pp. 1172–1186, 2023.\n[21] S. Ahmadi, “Advancing fraud detection in banking: Real-time applica-\ntions of explainable ai (xai),” Journal of Electrical Systems , vol. 18,\nno. 4, pp. 141–150, 2022.\n[22] B. I. Adekunle, E. C. Chukwuma-Eke, E. D. Balogun, and K. O.\nOgunsola, “Developing a digital operations dashboard for real-time\nfinancial compliance monitoring in multinational corporations,” Interna-\ntional Journal of Scientific Research in Computer Science, Engineering\nand Information Technology , vol. 9, no. 3, pp. 728–746, 2023.\n[23] L. A.-R. Aziz and Y . Andriansyah, “The role artificial intelligence in\nmodern banking: an exploration of ai-driven approaches for enhanced\nfraud prevention, risk management, and regulatory compliance,” Reviews\nof Contemporary Business Analytics , vol. 6, no. 1, pp. 110–132, 2023.\n[24] P. Azad, C. Akcora, and A. Khan, “Machine learning for blockchain data\nanalysis: Progress and opportunities,” Distributed Ledger Technologies:\nResearch and Practice , 2024.\n[25] S. Sahoo and K. Dutta, “Boardwalk empire: How generative ai is\nrevolutionizing economic paradigms,” arXiv preprint arXiv:2410.15212 ,\n2024.",
  "text_length": 35152
}